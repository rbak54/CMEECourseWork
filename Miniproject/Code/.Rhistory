Challenge_B <- function() {
# clear any existing graphs and plot your graph within the R window
graphics.off()
means<-matrix(nrow=10,ncol=200)
colnames(means)<-1:200
makecommunitymatrix<-function(communitylength){
listfact<-vector()
for (i in (1:communitylength)){
if (communitylength%%i==0){
listfact<-c(listfact,i)
}
}
communitymatrix<-matrix(nrow=length(listfact),ncol=communitylength)
k=1
for(j in listfact){
#print(1:j)
fill<-1:j
communitymatrix[k,]<-fill
k=k+1
}
return(communitymatrix)
}
communitymatrix<-makecommunitymatrix(100)
gen<-10
plotting<-function(communitymatrix,gen)
toplot<-matrix(nrow=nrow(communitymatrix)+1,ncol=gen)
for (row in (1:(nrow(toplot)-1))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[row,]<-matrix[,2]
#rownames(means[row])<-row
}
}
toplot
toplot
toplot[2]
toplot[2,]
length(toplot[2,])
length(matrix[,2])
communitymatrix<-makecommunitymatrix(100)
gen<-10
# Challenge question B
Challenge_B <- function() {
# clear any existing graphs and plot your graph within the R window
graphics.off()
means<-matrix(nrow=10,ncol=200)
colnames(means)<-1:200
makecommunitymatrix<-function(communitylength){
listfact<-vector()
for (i in (1:communitylength)){
if (communitylength%%i==0){
listfact<-c(listfact,i)
}
}
communitymatrix<-matrix(nrow=length(listfact),ncol=communitylength)
k=1
for(j in listfact){
#print(1:j)
fill<-1:j
communitymatrix[k,]<-fill
k=k+1
}
return(communitymatrix)
}
communitymatrix<-makecommunitymatrix(100)
gen<-10
plotting<-function(communitymatrix,gen)
toplot<-matrix(nrow=nrow(communitymatrix)+1,ncol=gen)
for (row in (1:(nrow(toplot)-1))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[row,]<-t(matrix[,2])
#rownames(means[row])<-row
}
}
# Challenge question C
Challenge_C <- function() {
# clear any existing graphs and plot your graph within the R window
}
toplot[2,]
toplot
t(matrix[,2])
toplot[row,]
class(matriz)
class(matrix)
class(toplot)
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)+1,ncol=gen))
for (row in (1:(nrow(toplot)-1))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[row,]<-t(matrix[,2])
#rownames(means[row])<-row
}
View(toplot)
View(toplot)
topplot[ncol(toplot)]
toplot[ncol(toplot)]
toplot[nrow(toplot)]
toplot[nrow(toplot)]
nrow(toplot)
toplot[nrow(toplot),]
toplot[nrow(toplot),]<-1:nrow(toplot)
toplot
ggplot(data=toplot,aes(x=toplot(10),y=toplot(1:9))
}
}
# Challenge question C
Challenge_C <- function() {
# clear any existing graphs and plot your graph within the R window
}
# Challenge question D
Challenge_D <- function() {
# clear any existing graphs and plot your graph within the R window
return("type your written answer here")
}
# Challenge question E
Challenge_E <- function() {
# clear any existing graphs and plot your graph within the R window
return("type your written answer here")
}
# Challenge question F
Challenge_F <- function() {
# clear any existing graphs and plot your graph within the R window
return("type your written answer here")
}
ggplot(data=toplot,aes(x=toplot(10),y=toplot))
ggplot(data=toplot,aes(x=toplot[10,],y=toplot))
ggplot(data=toplot,aes(x=toplot[10],y=toplot))
ggplot(data=toplot,aes(x=toplot[,10],y=toplot))
toplot[10.]
toplot[10,]
ggplot(data=toplot,aes(x=toplot[10,],y=toplot[1:9,]))
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix),ncol=gen))
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[row,]<-t(matrix[,2])
#rownames(means[row])<-row
}
toplot[nrow(toplot),]<-1:nrow(toplot)
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix),ncol=gen))
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[row,]<-t(matrix[,2])
#rownames(means[row])<-row
}
#toplot[nrow(toplot),]<-1:nrow(toplot)
ggplot(data=toplot,aes(toplot))
#toplot[nrow(toplot),]<-1:nrow(toplot)
ggplot(data=toplot,aes())
#toplot[nrow(toplot),]<-1:nrow(toplot)
ggplot(data=toplot,aes())+geom_point()
#toplot[nrow(toplot),]<-1:nrow(toplot)
ggplot(data=toplot,aes(y=toplot))+geom_point()
toplot
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)*gen,nrow=2))
gen<-10
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)*gen,nrow=2))
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
q=0
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[q+1,q:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
View(toplot)
View(toplot)
q<-0
q<-q+gen
q
q<-q+gen
q
q+1
(q+1):(gen+q)
communitymatrix<-makecommunitymatrix(100)
gen<-10
plotting<-function(communitymatrix,gen){
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
q=0
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
#toplot[nrow(toplot),]<-1:nrow(toplot)
toplot[2]<-1:gen
ggplot(data=toplot,aes(y=toplot))+geom_point()
}
communitymatrix<-makecommunitymatrix(100)
gen<-10
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
q=0
for (row in (1:nrow(toplot))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
View(toplot)
View(toplot)
q=0
dim(communitymatrix)
nrow(communitymatrix)
gen<-10
plotting<-function(communitymatrix,gen){
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
q=0
for (row in (1:(nrow(communitymatrix)*gen))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
#toplot[nrow(toplot),]<-1:nrow(toplot)
toplot[2]<-1:gen
ggplot(data=toplot,aes(y=toplot))+geom_point()
}
communitymatrix<-makecommunitymatrix(100)
gen<-10
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
q=0
for (row in (1:(nrow(communitymatrix)*gen))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
q=0
for (row in (1:nrow(communitymatrix))){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
#for (row in (1:nrow(communitymatrix))){
while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
q=0
community<-communitymatrix[row,]
matrix<-calc(gen,community)
matrix
t(matrix[,2])
length(t(matrix[,2]))
length(q+1:gen+q)
toplot[1,q+1:gen+q]<-t(matrix[,2])
toplot
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
toplot[1,q+1:gen+q]<-t(matrix[,2])
toplot<-as.data.frame(matrix(ncol=nrow(communitymatrix)*gen,nrow=2))
toplot[1,q+1:gen+q]<-t(matrix[,2])
toplot
q<-gen+q
q
nrow(communitymatrix)
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
q=0
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,q+1:gen+q]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
q=0
q<-gen+q
q
q+1:gen+q
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,(q+1):(gen+q)]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
q=0
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,(q+1):(gen+q)]<-t(matrix[,2])
q<-gen+q
#rownames(means[row])<-row
}
View(toplot)
View(toplot)
#toplot[nrow(toplot),]<-1:nrow(toplot)
toplot[2]<-rep(1:gen,nrow(communitymatrix))
#toplot[nrow(toplot),]<-1:nrow(toplot)
toplot[2,]<-rep(1:gen,nrow(communitymatrix))
toplot
q=0
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[1,(q+1):(gen+q)]<-t(matrix[,2])
toplot[3,(q+1):(gen+q)]<-row
q<-gen+q
#rownames(means[row])<-row
}
rownames(toplot)<-c("mean","time","initial")
toplot
ggplot(data=toplot,aes(x=time,y=mean))+geom_point()
ggplot(data=toplot,aes(x="time",y="mean"))+geom_point()
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)*gen,ncol=3))
q=0
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)*gen,ncol=3))
q=0
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[(q+1):(gen+q),1]<-t(matrix[,2])
toplot[(q+1):(gen+q),3]<-row
q<-gen+q
#rownames(means[row])<-row
}
toplot<-as.data.frame(matrix(nrow=nrow(communitymatrix)*gen,ncol=3))
q=0
for (row in (1:nrow(communitymatrix))){
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
matrix<-calc(gen,community)
toplot[(q+1):(gen+q),1]<-matrix[,2]
toplot[(q+1):(gen+q),3]<-row
q<-gen+q
#rownames(means[row])<-row
}
#toplot[nrow(toplot),]<-1:nrow(toplot)
toplot[,2]<-rep(1:gen,nrow(communitymatrix))
colnames(toplot)<-c("mean","time","initial")
toplot
ggplot(data=toplot,aes(x=time,y=mean))+geom_point()
ggplot(data=toplot,aes(x=time,y=mean))+geom_point(color=initial)
ggplot(data=toplot,aes(x=time,y=mean,colour=initial))+geom_point()
as.factor(toplot$initial)
ggplot(data=toplot,aes(x=time,y=mean,colour=initial))+geom_point()
toplot$initial<-as.factor(toplot$initial)
ggplot(data=toplot,aes(x=time,y=mean,colour=initial))+geom_point()
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
Challenge_B()
communitymatrix<-makecommunitymatrix(100)
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
Challenge_B()
Challenge_A()
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
Challenge_A()
Challenge_B()
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
Challenge_B()
communitymatrix<-makecommunitymatrix(100)
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
communitymatrix<-makecommunitymatrix(100)
means<-matrix(nrow=10,ncol=200)
colnames(means)<-1:200
makecommunitymatrix<-function(communitylength){
listfact<-vector()
for (i in (1:communitylength)){
if (communitylength%%i==0){
listfact<-c(listfact,i)
}
}
communitymatrix<-matrix(nrow=length(listfact),ncol=communitylength)
k=1
for(j in listfact){
#print(1:j)
fill<-1:j
communitymatrix[k,]<-fill
k=k+1
}
return(communitymatrix)
}
communitymatrix<-makecommunitymatrix(100)
gen<-200
row=2
#while (q<ncol(toplot)){
community<-communitymatrix[row,]
ccommunity#
ccommunity
community
max(community)
source('~/Documents/CMEECourseWork/Week8/Code/rbk119_HPC_2019_main.R', echo=TRUE)
Challenge_B()
install.packages("xtable")
setwd("~/")
mod<-lm(Tarsus~StudentID,data=a)
setwd("~/Documents/CMEECourseWork/Week4/Code")
library(dplyr)
require(lme4)
a<-read.table("../Data/ObserverRepeatability.txt", header = TRUE)
a  %>%
group_by(StudentID)  %>%
summarise  (count=length(StudentID))
a  %>%
group_by(StudentID)  %>%
summarise  (count=length(StudentID))    %>%
summarise  (length(StudentID))#
a  %>%
group_by(StudentID)  %>%
summarise  (count=length(StudentID))  %>%
summarise  (sum(count))
length(a$StudentID)
a  %>%
group_by(StudentID)  %>%
summarise  (count=length(StudentID))  %>%
summarise  (sum(count^2))
mod<-lm(Tarsus~StudentID,data=a)
anova(mod)
mod<-lm(Tarsus~Leg+Handedness+StudentID,data=a)
anova(mod)
#  plot3conA<-ggplot()+geom_point(aes(ConTemp,log(aIII)),color=cbbPalette[4],data=data3a,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("log Search Rate")+theme(text = element_text(size=20))
library(ggplot2)
library(ggthemes)
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
if (dir.exists("../Results/Plots")==FALSE){
dir.create("../Results/Plots")
}
data<-read.csv("../Results/dataanalysiscrat.csv")
data1<-subset(data, aIp<0.05)
setwd("~/Documents/CMEECourseWork/Miniproject/Code")
library(ggplot2)
library(ggthemes)
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
if (dir.exists("../Results/Plots")==FALSE){
dir.create("../Results/Plots")
}
data<-read.csv("../Results/dataanalysiscrat.csv")
data1<-subset(data, aIp<0.05)
data2<-subset(data,hIIp<0.05 & aIIp<0.05)
data3a<-subset(data,aIIIp<0.05 )
data3h<-subset(data,hIIIp<0.05)
plot2con<-ggplot()+geom_point(aes(ConTemp,log(aII),color="Search Rate"),data=data2,size=4)+
geom_point(aes(ConTemp,log(hII),color="Handling Time"),data=data2,size=4)+
theme_bw()+scale_color_colorblind("Parameter")+xlab("Temperature (degrees C)")+ylab("log Parameter")+theme(text = element_text(size=20))
plot2res<-ggplot()+geom_point(aes(ResTemp,log(aII),color="Search Rate"),data=data2,size=4)+
geom_point(aes(ResTemp,log(hII),color="Handling Time"),data=data2,size=4)+
theme_bw()+scale_color_colorblind("Parameter")+xlab("Temperature (degrees C)")+ylab("log Parameter")+theme(text = element_text(size=20))
plot1con<-  ggplot()+geom_point(aes(ConTemp,log(aI),col="Search Rate"),data=data1,size=4)+
theme_bw()+scale_color_colorblind("Parameter")+xlab("Temperature (degrees C)")+ylab("log Parameter")+theme(text = element_text(size=20))
plot1res<-ggplot()+
geom_point(aes(ResTemp,log(aI),col="Search Rate"),data=data1,size=4)+
theme_bw()+scale_color_colorblind("Parameter")+xlab("Temperature (degrees C)")+ylab("log Parameter")+theme(text = element_text(size=20))
plot3con<-ggplot()+
geom_point(aes(ConTemp,log(aIII),col="Search Rate"),data=data3a,size=4)+
geom_point(aes(ConTemp,log(hIII),col="Handling Time"),data=data3h,size=4)+
theme_bw()+scale_color_colorblind("Parameter")+xlab("Temperature (degrees C)")+ylab("log Parameter")+theme(text = element_text(size=20))
plot3res<- ggplot() + geom_point(aes(ResTemp, log(aIII), col = "Search Rate"),size =4,data = data3a) +
geom_point(aes(ResTemp, log(hIII), col = "Handling Time"),size = 4,
data = data3h) +
theme_bw() + scale_color_colorblind("Parameter") + xlab("Temperature (degrees C)") +
ylab("log Parameter") + theme(text = element_text(size = 20))
plot2conA<-ggplot()+geom_point(aes(ConTemp,log(aII)),color=cbbPalette[4],data=data2,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("log Search Rate")+theme(text = element_text(size=20))
plot2conH<-ggplot()+geom_point(aes(ConTemp,log(hII)),color=cbbPalette[3],data=data2,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("Handling Time")+theme(text = element_text(size=20))
plot1conA<-ggplot()+geom_point(aes(ConTemp,log(aI)),color=cbbPalette[4],data=data1,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("log Search Rate")+theme(text = element_text(size=20))
plot3conH<- ggplot()+geom_point(aes(ConTemp,log(hIII)),color=cbbPalette[3],data=data3h,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("Handling Time")+theme(text = element_text(size=20))
#  plot3conA<-
ggplot()+geom_point(aes(ConTemp,log(aIII)),color=cbbPalette[4],data=data3a,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("log Search Rate")+theme(text = element_text(size=20))
# plot3conH<-
ggplot()+geom_point(aes(ConTemp,log(hIII)),color=cbbPalette[3],data=data3h,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("Handling Time")+theme(text = element_text(size=20))
# plot3conH<-
ggplot()+geom_point(aes(ConTemp,log(hIII)),color=cbbPalette[3],data=data3h,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("Handling Time")+theme(text = element_text(size=20))
#  plot3conA<-
ggplot()+geom_point(aes(ConTemp,log(aIII)),color=cbbPalette[4],data=data3a,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("log Search Rate")+theme(text = element_text(size=20))
# plot3conH<-
ggplot()+geom_point(aes(ConTemp,log(hIII)),color=cbbPalette[5],data=data3h,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("Handling Time")+theme(text = element_text(size=20))
# plot3conH<-
ggplot()+geom_point(aes(ConTemp,log(hIII)),color=cbbPalette[6],data=data3h,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("Handling Time")+theme(text = element_text(size=20))
# plot3conH<-
ggplot()+geom_point(aes(ConTemp,log(hIII)),color=cbbPalette[2],data=data3h,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("Handling Time")+theme(text = element_text(size=20))
