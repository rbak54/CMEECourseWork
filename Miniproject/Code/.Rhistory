if(!("try-error" %in% class(pol3))){
Predict_pol3<- predict.lm(pol3, data.frame(ResDensity=Lengths) )
lines(Lengths,Predict_pol3,col=cbbPalette[4],lwd=2.5)
#only use values that are finite
if (AIC(pol3)!=-Inf){
datashort[j,"Poly3_AIC"]<-AIC(pol3)}
}else{
datashort[j,"FailPol3"]<-1
}
if("try-error" %in% class(pol2)){
datashort[j,"FailPol2"]<-1
}else{
Predict_pol2<- predict.lm(pol2, data.frame(ResDensity=Lengths) )
lines(Lengths,Predict_pol2,col=cbbPalette[6],lwd=2.5)
datashort[j,"Poly2_AIC"]<-AIC(pol2)
}
#hollin
if("try-error" %in% class(HolFitI)){
datashort[j,"FailHolI"]<-1
} else {
Predict_HolI<-predict.lm(HolFitI,data.frame(ResDensity=Lengths))
datashort[j,"HollingI_AIC"]<-AIC(HolFitI)
lines(Lengths,Predict_HolI,col=cbbPalette[3],lwd=2.5)
datashort[j,"aI"]<-HolFitI$coefficients[1]
#datashort[j,"aI"]<-HolFitI$coefficients[2]
datashort[j,"aIp"]<-summary(HolFitI)[[4]][[1,4]]
}
if("try-error" %in% class(HolFitII)){
datashort[j,"FailHolII"]<-1
} else {
Predict_HolII<- HollingII(Lengths,a=coef(HolFitII)["a"], h=coef(HolFitII)["h"])
lines(Lengths,Predict_HolII,col=cbbPalette[2],lwd=2.5)
datashort[j,"HollingII_AIC"]<-AIC(HolFitII)
datashort[j,"aII"]<-summary(HolFitII)$parameters[1]
datashort[j,"hII"]<-summary(HolFitII)$parameters[2]
datashort[j,"aIIp"]<-summary(HolFitII)[[10]][[1,4]]
datashort[j,"hIIp"]<-summary(HolFitII)[[10]][[2,4]]
}
##generalised holling
if("try-error" %in% class(HolFitIII)){
datashort[j,"FailHolIII"]<-1
} else {
Predict_HolIII<- HollingIII(Lengths, a=coef(HolFitIII)["a"], h=coef(HolFitIII)["h"] , q=coef(HolFitIII)["q"])
lines(Lengths,Predict_HolIII,col=cbbPalette[5],lwd=2.5)
datashort[j,"HollingIII_AIC"]<-AIC(HolFitIII)
datashort[j,"aIII"]<-summary(HolFitIII)$parameters[1]
datashort[j,"hIII"]<-summary(HolFitIII)$parameters[2]
datashort[j,"qIII"]<-summary(HolFitIII)$parameters[3]
datashort[j,"qse"]<-summary(HolFitIII)$parameters[3,2]
datashort[j,"aIIIp"]<-summary(HolFitIII)[[10]][[1,4]]
datashort[j,"hIIIp"]<-summary(HolFitIII)[[10]][[2,4]]
datashort[j,"qIIIp"]<-summary(HolFitIII)[[10]][[3,4]]
}
HolFitI$coefficients[1]
HolFitI
HolFitII
summary(HolFitII)$parameters
summary(HolFitII)$parameters[1]
summary(HolFitII)$parameters[2]
summary(HolFitIII)$parameters[2]
HolFitIII
summary(HolFitIII)
summary(HolFitIII)[1]
summary(HolFitIII)$parameters
summary(HolFitIII)$parameters[1]
summary(HolFitIII)$parameters[2]
summary(HolFitIII)$parameters[3]
h0=max(subsetT$N_TraitValue)
#fun function to calculate steepest gradient
a0=Maxlm(subsetT)
##make matrix for initial values and aic
mat<-matrix(nrow=100,ncol=3)
vala<-abs(rnorm(1,mean=a0, 1))
valh<-abs(rnorm(1,mean=h0, 1))
mat[k,1]<-vala
mat[k,2]<-valh
log(0.01)
log(0.02)
log(0.03)
log(0.1)
log(0.5)
log(0)
log(0.1)
log(1)
library(xtable)
options(xtable.floating = FALSE)
#options(xtable.timestamp = "")
library(ggplot2)
data<-read.csv("../Results/CRatmodelfitting.csv")
if (dir.exists("../Results/Tables")==FALSE){
dir.create("../Results/Tables")
}
#add to python some of these
data$BestAIC<-NA
data$BestAICHolRECAL<-NA
data$BestAICHol<-NA
data$qcil<-NA
data$qciu<-NA
data$qIIIci<-NA
data$best.model.type<-NA
data$CUTCONTEMPHOLLING<-NA
data$CUTCONTEMPTYPE<-NA
data$qcil<-NA
data$qciu<-NA
data$qcil<-data$qIII-2*data$qse
data$qciu<-data$qIII+2*data$qse
data<-subset(data,ConThermy=="Ectotherm" | ResThermy=="Ectotherm")
data<-subset(data,Con_Thermy=="Ectotherm" | Res_Thermy=="Ectotherm")
data<-subset(data,Con_Thermy=="Ectotherm" )
data<-subset(data,Con_Thermy=="Ectotherm" )
data<-subset(data,data$Con_Thermy=="Ectotherm" )
data$Con_Thermy
data<-subset(data,data$Con_Thermy=="ectotherm" )
data<-subset(data,data$Con_Thermy=="ectotherm" )
data<-subset(data,Con_Thermy=="ectotherm")
data<-read.csv("../Results/CRatmodelfitting.csv")
data<-subset(data,Con_Thermy=="ectotherm")
data<-read.csv("../Results/CRatmodelfitting.csv")
data<-subset(data,Con_Thermy=="ectotherm"| Res_Thermy=="ectotherm")
data<-subset(data,Con_Thermy=="ectotherm"| Res_Thermy=="ectotherm")
if (dir.exists("../Results/Tables")==FALSE){
dir.create("../Results/Tables")
}
#add to python some of these
data$BestAIC<-NA
data$BestAICHolRECAL<-NA
data$BestAICHol<-NA
data$qcil<-NA
data$qciu<-NA
data$qIIIci<-NA
data$best.model.type<-NA
data$CUTCONTEMPHOLLING<-NA
data$CUTCONTEMPTYPE<-NA
data$qcil<-NA
data$qciu<-NA
data$qcil<-data$qIII-2*data$qse
data$qciu<-data$qIII+2*data$qse
data<-subset(data,Con_Thermy=="ectotherm"| Res_Thermy=="ectotherm")
#data$Con_ForagingMovement<-tolower(data$Con_ForagingMovement)
#best AIC
ltHol<-as.vector(match("HollingI_AIC",names(data)):match("HollingIII_AIC",names(data)))
ltHolR<-as.vector(match("HollingI_AIC",names(data)):match("HollingII_AIC",names(data)))
lt2<-as.vector(match("HollingI_AIC",names(data)):match("Poly3_AIC",names(data)))
lt<-c(match("HollingI_AIC",names(data)):match("HollingII_AIC",names(data)),match("Poly2_AIC",names(data)):match("Poly3_AIC",names(data)))
for ( i in 1:nrow(data)){
data$BestAIC[i]<-colnames(sort(data[i,lt2],decreasing = F)[1])
#best of hollings
data$BestAICHol[i]<-colnames(sort(data[i,ltHol],decreasing = F)[1])
#second best model
data$BestAIC_sec[i]<-colnames(sort(data[i,lt2],decreasing = F)[2])
#here when recalculate if ci overlap 0 for gen holII--> recalculate best model and best holling model
data$BestAICRECAL[i]<-ifelse(!is.na(data$qIII[i]) & (with(data, qcil[i] < 0 & qciu[i]> 0)),colnames(sort(data[i,lt],decreasing = F)[1]),colnames(sort(data[i,lt2],decreasing = F)[1]))
data$BestAICHolRECAL[i]<-ifelse(!is.na(data$qIII[i]) & (with(data, qcil[i] < 0 & qciu[i]> 0)),colnames(sort(data[i,ltHolR],decreasing = F)[1]),colnames(sort(data[i,ltHol],decreasing = F)[1]) )
data$qIIIci[i]<-ifelse(!is.na(data$qIII[i]) & (with(data, qcil[i] < 0 & qciu[i]> 0)),0,data$qIII[i])
}
#is the best model mechanistic or phenomomenological
data$best.model.type <- ifelse(data$BestAIC == "HollingI_AIC" | data$BestAIC== "HollingII_AIC" | data$BestAIC=="HollingIII_AIC", 'Mechanistic',
ifelse(data$BestAIC == "Poly2_AIC" | data$BestAIC == "Poly3_AIC", 'Phenomenological', 'No_successful_model'))
data$best.model.type.recal <- ifelse(data$BestAICRECAL == "HollingI_AIC" | data$BestAICRECAL== "HollingII_AIC" | data$BestAICRECAL=="HollingIII_AIC", 'Mechanistic',
ifelse(data$BestAICRECAL == "Poly2_AIC" | data$BestAICRECAL == "Poly3_AIC", 'Phenomenological', 'No_successful_model'))
#section 2
chitable<-matrix(nrow=2,ncol=2)
#chi squared goodness of fit
##stats to say different
Expected<-rep(0.2*nrow(data),5)
Observed<-unname(table(data$BestAIC))
chisquared<-sum(((Observed-Expected)^2)/Expected)
chitable[1,1]<-chisquared
chitable[1,2]<-1-pchisq(chisquared,4)
#so reject the null hypothesis that all models are as good as each other
Expected<-rep(0.5*nrow(data),2)
Observed<-unname(table(data$best.model.type))
chisquared<-sum(((Observed-Expected)^2)/Expected)
chitable[2,1]<-chisquared
chitable[2,2]<-1-pchisq(chisquared,1)
colnames(chitable)<-c("Chi-squared","p-value")
rownames(chitable)<-c("Best Model","Best Model Type")
output_chitable<-xtable(chitable,label='chitable',caption = 'Results of chi-squared tests for whether the best model and the best model type (i.e phenomenological or mechanistic) are uniformally distributed')
print(output_chitable,floating=FALSE,tabular.environment = 'longtable',file ="../Results/Tables/output_chitable_latex.txt",caption.placement ="top")
#holrecal
variable<-"CUTCONTEMPHOLLING"
data2<-subset(data,hIIp<0.05 & aIIp<0.05)
data1<-subset(data,aIp<0.05)
#because aIII so few are significant.
#so can calc for ai,aii,hii,hiii
data3<-subset(data,hIIIp<0.05 & aIIIp<0.05)
data3h<-subset(data,hIIIp<0.05)
#now con
#shapiro.test(na.omit(data$ConTemp))
dataset_aii<-subset(data2, !is.na(ConTemp)& !is.na(aII))
a<-lm(dataset_aii$ConTemp~log(dataset_aii$aII))
shapiro.test(a$residuals)
dataset_aiii<-subset(data3, !is.na(ConTemp) & !is.na(aIII))
a<-lm(dataset_aiii$ConTemp~log(dataset_aiii$aIII))
shapiro.test(a$residuals)
dataset_ai<-subset(data1,!is.na(ConTemp) &  aI>0)
a<-lm(dataset_ai$ConTemp~log(dataset_ai$aI))
shapiro.test(a$residuals)
dataset_hiii<-subset(data3h, !is.na(ConTemp) & !is.na(hIII))
dataset_hii<-subset(data2, !is.na(ConTemp) &!is.na(hII))
n<-vector(length=4)
con_search_1<-cor.test(dataset_ai$ConTemp,dataset_ai$aI,method = "k")
n[1]<-nrow(dataset_ai)
con_search_2<-cor.test(dataset_aii$ConTemp,dataset_aii$aII,method = "k")
n[2]<-nrow(dataset_aii)
con_search_3<-cor.test(dataset_aiii$ConTemp,dataset_aiii$aIII,method = "k")
#not poss for aiii- only 20 where significant
con_hand_2<-cor.test(dataset_hii$ConTemp,dataset_hii$hII,method = "k")
n[3]<-nrow(dataset_hii)
con_hand_3<-cor.test(dataset_hiii$ConTemp,dataset_hiii$hIII,method = "k")
n[4]<-nrow(dataset_hiii)
testlist<-list(con_search_1,con_search_2,con_hand_2,con_hand_3)
output_temp_con<-matrix(nrow=length(testlist),ncol=4)
colnames(output_temp_con)<-c("z","tau","p-value","n")
rownames(output_temp_con)<-c("Search rate type I","Search rate type II", "Handling time type II", "Handling time type III")
for(i in 1:length(testlist)){
output_temp_con[i,1]<-testlist[[i]]$statistic
output_temp_con[i,2]<-testlist[[i]]$estimate
output_temp_con[i,3]<-testlist[[i]]$p.value
output_temp_con[i,4]<-n[i]
}
#this one a bit different because samplee size
output_temp_con_table<-xtable(output_temp_con,label='Paramtemp',caption = 'Table of results for Kendall rank order correlation tests for consumer temperature and parameter values.')
print(output_temp_con_table,floating=FALSE,tabular.environment = 'longtable',file ="../Results/Tables/output_temp_con_latex.txt",caption.placement ="top")
##section 2 of results- numbers
write(format(round(sum(data$BestAIC=="HollingII_AIC")/length(data$BestAIC), 2), nsmall = 2),"../Results/Tables/holIIbest")
write(format(round(sum(data$BestAIC_sec=="Poly3_AIC")/length(data$BestAIC_sec), 2), nsmall = 2),"../Results/Tables/poly32best")
sum(data$BestAIC_sec=="Poly2_AIC")/length(data$BestAIC_sec)
write(format(round(sum(data$best.model.type=="Mechanistic")/length(data$best.model.type), 2), nsmall = 2),"../Results/Tables/mechbest")
##section3?
write(sum(data$BestAICHol=="HollingIII_AIC")-sum(data$BestAICHolRECAL=="HollingIII_AIC"),"../Results/Tables/recaldiff")
#senction 1 of results
sum(data$FailHolI>0,na.rm=T)
write(sum(data$FailHolII>0,na.rm = T),"../Results/Tables/failII")
write(sum(data$FailHolIII>0,na.rm = T),"../Results/Tables/failIII")
sum(data$FailPol2>0,na.rm = T)
sum(data$FailPol3>0,na.rm = T)
sum(data$hIIIp<0.05,na.rm=T)
#caption
write.csv(data,"../Results/dataanalysiscrat.csv")
library(ggplot2)
cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
if (dir.exists("../Results/Plots")==FALSE){
dir.create("../Results/Plots")
}
data<-read.csv("../Results/dataanalysiscrat.csv")
data1<-subset(data, aIp<0.05)
data2<-subset(data,hIIp<0.05 & aIIp<0.05)
data3a<-subset(data,aIIIp<0.05 )
data3h<-subset(data,hIIIp<0.05)
plot2conA<-ggplot()+geom_point(aes(ConTemp,log(aII)),color=cbbPalette[4],data=data2,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("log Search Rate")+theme(text = element_text(size=20))
plot2conH<-ggplot()+geom_point(aes(ConTemp,log(hII)),color=cbbPalette[2],data=data2,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("Handling Time")+theme(text = element_text(size=20))
plot1conA<-ggplot()+geom_point(aes(ConTemp,log(aI)),color=cbbPalette[4],data=data1,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("log Search Rate")+theme(text = element_text(size=20))
plot3conH<-ggplot()+geom_point(aes(ConTemp,log(hIII)),color=cbbPalette[2],data=data3h,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("Handling Time")+theme(text = element_text(size=20))
plot3conA<-ggplot()+geom_point(aes(ConTemp,log(aIII)),color=cbbPalette[4],data=data3a,size=4)+
theme_bw()+xlab("Consumer Temperature (degrees C)")+ylab("log Search Rate")+theme(text = element_text(size=20))
printgraph<-function(name){
png(paste0("../Results/Plots/",substitute(name),".png"))
print(name)
dev.off()
}
printgraph(plot1conA)
printgraph(plot2conA)
printgraph(plot2conH)
printgraph(plot3conA)
printgraph(plot3conH)
#this graph shows that mechanistic is slightly better
modelbesttype<-ggplot(data=data,aes(x=best.model.type,fill=BestAIC))+geom_bar(stat="count")+
theme_bw()+theme(text = element_text(size = 15))+xlab("Best Model Type")+ylab("Number of models")+ylim(0,125)+scale_fill_manual(values=c(cbbPalette[2:4],cbbPalette[7:8]),"Best Model")
#diff between holling and holling recal
modelbestholl<-ggplot(data=data, aes(BestAICHol))+xlab("Best Holling Model")+ylab("Number of models")+ylim(0,175)+theme_bw()+geom_bar()+theme(text = element_text(size = 20))
modelbesthollrecal<-ggplot(data=data, aes(BestAICHolRECAL))+xlab("Best Holling Model")+ylab("Number of models")+ylim(0,175)+theme_bw()+geom_bar()+theme(text = element_text(size = 20))
#type 2 most common then 1 then 3
modelbest<-ggplot(data=data, aes(BestAIC))+geom_bar()+ylim(0,75)+theme_bw()+theme(text = element_text(size = 15))+xlab("Best Model")+ylab("Number of models")
modelsecondbest<-ggplot(data=data, aes(BestAIC_sec))+geom_bar()+theme_bw()+theme(text = element_text(size = 15))+xlab("Second Best Model")+ylab("Number of models")
printgraph(modelbesttype)
printgraph(modelbestholl)
printgraph(modelbesthollrecal)
printgraph(modelbest)
printgraph(modelsecondbest)
#working on temp mdel graph
tempmodel<-ggplot(data=data,aes(CUTCONTEMPTYPE,fill=BestAIC))+geom_bar(stat="count",position = position_dodge())+theme_bw()+theme(text = element_text(size = 20))+xlab("Temperature Interval (degrees C)")+ylab("Number of models")+scale_fill_manual(values=c(cbbPalette[2:4],cbbPalette[7:8]),"Best Model")
tempmodelrhol<-  ggplot(data=data,aes(CUTCONTEMPHOLLING,fill=BestAICHolRECAL))+geom_bar(stat="count",position = position_dodge())+theme_bw()+theme(text = element_text(size = 20))+xlab("Temperature Interval (degrees C)")+ylab("Number of models")+scale_fill_manual(values=c(cbbPalette[2:4]),"Best Holling Model")
temppmodeltype<-ggplot(data=data,aes(CUTCONTEMPTYPE,fill=best.model.type))+geom_bar(stat="count",position = position_dodge())+theme_bw()+theme(text = element_text(size = 20))+xlab("Temperature Interval (degrees C)")+ylab("Number of models")+scale_fill_manual("Best Model Type",values=c(cbbPalette[5:6]))
#+scale_fill_colorblind("Best Model")
printgraph(tempmodelrhol)
printgraph(temppmodeltype)
printgraph(tempmodel)
data(data,Res_Thermy=="ectotherm")
data<- data(data,Res_Thermy=="ectotherm")
library(xtable)
options(xtable.floating = FALSE)
#options(xtable.timestamp = "")
library(ggplot2)
data<-read.csv("../Results/CRatmodelfitting.csv")
if (dir.exists("../Results/Tables")==FALSE){
dir.create("../Results/Tables")
}
#add to python some of these
data$BestAIC<-NA
data$BestAICHolRECAL<-NA
data$BestAICHol<-NA
data$qcil<-NA
data$qciu<-NA
data$qIIIci<-NA
data$best.model.type<-NA
data$CUTCONTEMPHOLLING<-NA
data$CUTCONTEMPTYPE<-NA
data$qcil<-NA
data$qciu<-NA
data$qcil<-data$qIII-2*data$qse
data$qciu<-data$qIII+2*data$qse
data<- data(data,Res_Thermy=="ectotherm")
unique(Res_Thermy)
unique(dat$Res_Thermy)
unique(dat$Res_Thermy)
unique(data$Res_Thermy)
data$Res_Thermy
data<-read.csv("../Results/CRatmodelfitting.csv")
data$Res_Thermy
sum(data$Res_Thermy=="ectotherm")
sum(data$Con_Thermy=="ectotherm")
source('~/Documents/CMEECourseWork/Miniproject/Code/analysistidied.R', echo=TRUE)
source('~/Documents/CMEECourseWork/Miniproject/Code/modelfitting.R', echo=TRUE)
e^(-1/3)
exp(-1/3)
exp(-1/10)
exp(1/10)
exp(1/20)
exp(-0.5/10)
exp(-0.5/20)
exp(0.5/20)
exp(0.5/30)
exp(0.5/0.01*20)
exp(0.5/0.1*20)
exp(0.5/0.1*21)
log(10)
log(5)
log(5)*3
log(9)*3
log(10)*3
log(20)*3
log(20)*4
log(10)*4
?nlsLM
library(xtable)
cite(xtable)
log(5)
log(10)
log(20)
#Author: Ruth Keane (ruth.keane19@imperial.ac.uk)
#Script: analysistidied.R
#Desc: analysing model results
#Arguments: none
#Input: none
#Output: none
#Date: Feb 2020
library(xtable)
options(xtable.floating = FALSE)
library(ggplot2)
data<-read.csv("../Results/CRatmodelfitting.csv")
if (dir.exists("../Results/Tables")==FALSE){
dir.create("../Results/Tables")
}
data$qcil<-data$qIII-2*data$qse
data$qciu<-data$qIII+2*data$qse
#find column names for AIC
ltHol<-as.vector(match("HollingI_AIC",names(data)):match("HollingIII_AIC",names(data)))
ltHolR<-as.vector(match("HollingI_AIC",names(data)):match("HollingII_AIC",names(data)))
lt2<-as.vector(match("HollingI_AIC",names(data)):match("Poly3_AIC",names(data)))
lt<-c(match("HollingI_AIC",names(data)):match("HollingII_AIC",names(data)),match("Poly2_AIC",names(data)):match("Poly3_AIC",names(data)))
for ( i in 1:nrow(data)){
data$BestAIC[i]<-colnames(sort(data[i,lt2],decreasing = F)[1])
#best of hollings
data$BestAICHol[i]<-colnames(sort(data[i,ltHol],decreasing = F)[1])
#second best model
data$BestAIC_sec[i]<-colnames(sort(data[i,lt2],decreasing = F)[2])
#here when recalculate if ci overlap 0 for gen holII--> recalculate best model and best holling model
data$BestAICRECAL[i]<-ifelse(!is.na(data$qIII[i]) & (with(data, qcil[i] < 0 & qciu[i]> 0)),colnames(sort(data[i,lt],decreasing = F)[1]),colnames(sort(data[i,lt2],decreasing = F)[1]))
data$BestAICHolRECAL[i]<-ifelse(!is.na(data$qIII[i]) & (with(data, qcil[i] < 0 & qciu[i]> 0)),colnames(sort(data[i,ltHolR],decreasing = F)[1]),colnames(sort(data[i,ltHol],decreasing = F)[1]) )
data$qIIIci[i]<-ifelse(!is.na(data$qIII[i]) & (with(data, qcil[i] < 0 & qciu[i]> 0)),0,data$qIII[i])
}
#is the best model mechanistic or phenomomenological
data$best.model.type <- ifelse(data$BestAIC == "HollingI_AIC" | data$BestAIC== "HollingII_AIC" | data$BestAIC=="HollingIII_AIC", 'Mechanistic',
ifelse(data$BestAIC == "Poly2_AIC" | data$BestAIC == "Poly3_AIC", 'Phenomenological', 'No_successful_model'))
data$best.model.type.recal <- ifelse(data$BestAICRECAL == "HollingI_AIC" | data$BestAICRECAL== "HollingII_AIC" | data$BestAICRECAL=="HollingIII_AIC", 'Mechanistic',
ifelse(data$BestAICRECAL == "Poly2_AIC" | data$BestAICRECAL == "Poly3_AIC", 'Phenomenological', 'No_successful_model'))
#section 2
chitable<-matrix(nrow=2,ncol=2)
#chi squared goodness of fit
##stats to say different
Expected<-rep(0.2*nrow(data),5)
Observed<-unname(table(data$BestAIC))
chisquared<-sum(((Observed-Expected)^2)/Expected)
chitable[1,1]<-chisquared
chitable[1,2]<-1-pchisq(chisquared,4)
#so reject the null hypothesis that all models are as good as each other
Expected<-rep(0.5*nrow(data),2)
Observed<-unname(table(data$best.model.type))
chisquared<-sum(((Observed-Expected)^2)/Expected)
chitable[2,1]<-chisquared
chitable[2,2]<-1-pchisq(chisquared,1)
colnames(chitable)<-c("Chi-squared","p-value")
rownames(chitable)<-c("Best Model","Best Model Type")
output_chitable<-xtable(chitable,label='chitable',caption = 'Results of chi-squared tests for whether the best model and the best model type (i.e phenomenological or mechanistic) are uniformally distributed')
print(output_chitable,floating=FALSE,tabular.environment = 'longtable',file ="../Results/Tables/output_chitable_latex.txt",caption.placement ="top")
#holrecal
variable<-"CUTCONTEMPHOLLING"
data$CUTCONTEMPHOLLING<-cut(data$ConTemp,c(0,15,20,40))
table_observed<-table(data$BestAICHolRECAL,data[,variable])
table_observed<-rbind(table_observed,colSums(table_observed))
table_observed<-cbind(table_observed,rowSums(table_observed))
Observed<-table(data$BestAICHolRECAL,data[,variable])
Expected<-matrix(nrow=nrow(Observed),ncol=ncol(Observed))
for(i in 1:(nrow(table_observed)-1)){
for (j in 1:(ncol(table_observed)-1)){
Expected[i,j]<-(table_observed[nrow(table_observed),j]*table_observed[i,ncol(table_observed)])/table_observed[nrow(table_observed),ncol(table_observed)]
}
}
Expected
df<-(nrow(Expected)-1)*(ncol(Expected)-1)
chisquared<-sum(((Observed-Expected)^2)/Expected)
chisquared
1-pchisq(chisquared,df)
write(format(round(chisquared, 2), nsmall = 2),"../Results/Tables/chiholrtemp")
write(format(round(1-pchisq(chisquared,df), 2), nsmall = 2),"../Results/Tables/pholrtemp")
write(df,"../Results/Tables/dfholrtemp")
#model type
variable<-"CUTCONTEMPTYPE"
data$CUTCONTEMPTYPE<-cut(data$ConTemp,c(0,10,15,20,25,40))
table_observed<-table(data$best.model.type,data[,variable])
table_observed<-rbind(table_observed,colSums(table_observed))
table_observed<-cbind(table_observed,rowSums(table_observed))
Observed<-table(data$best.model.type,data[,variable])
Expected<-matrix(nrow=nrow(Observed),ncol=ncol(Observed))
for(i in 1:(nrow(table_observed)-1)){
for (j in 1:(ncol(table_observed)-1)){
Expected[i,j]<-(table_observed[nrow(table_observed),j]*table_observed[i,ncol(table_observed)])/table_observed[nrow(table_observed),ncol(table_observed)]
}
}
Expected
df<-(nrow(Expected)-1)*(ncol(Expected)-1)
chisquared<-sum(((Observed-Expected)^2)/Expected)
chisquared
1-pchisq(chisquared,df)
write(format(round(chisquared, 2), nsmall = 2),"../Results/Tables/chitypetemp")
write(format(round(1-pchisq(chisquared,df), 2), nsmall = 2),"../Results/Tables/ptypetemp")
write(df,"../Results/Tables/dftypetemp")
data2<-subset(data,hIIp<0.05 & aIIp<0.05)
data1<-subset(data,aIp<0.05)
#because aIII so few are significant.
#so can calc for ai,aii,hii,hiii
data3<-subset(data,hIIIp<0.05 & aIIIp<0.05)
data3h<-subset(data,hIIIp<0.05)
#now con
dataset_aii<-subset(data2, !is.na(ConTemp)& !is.na(aII))
#a<-lm(dataset_aii$ConTemp~log(dataset_aii$aII))
shapiro.test(a$residuals)
dataset_aiii<-subset(data3, !is.na(ConTemp) & !is.na(aIII))
#a<-lm(dataset_aiii$ConTemp~log(dataset_aiii$aIII))
shapiro.test(a$residuals)
dataset_ai<-subset(data1,!is.na(ConTemp) &  aI>0)
#a<-lm(dataset_ai$ConTemp~log(dataset_ai$aI))
shapiro.test(a$residuals)
dataset_hiii<-subset(data3h, !is.na(ConTemp) & !is.na(hIII))
dataset_hii<-subset(data2, !is.na(ConTemp) &!is.na(hII))
n<-vector(length=4)
con_search_1<-cor.test(dataset_ai$ConTemp,dataset_ai$aI,method = "k")
n[1]<-nrow(dataset_ai)
con_search_2<-cor.test(dataset_aii$ConTemp,dataset_aii$aII,method = "k")
n[2]<-nrow(dataset_aii)
con_search_3<-cor.test(dataset_aiii$ConTemp,dataset_aiii$aIII,method = "k")
#not poss for aiii- only 20 where significant
con_hand_2<-cor.test(dataset_hii$ConTemp,dataset_hii$hII,method = "k")
n[3]<-nrow(dataset_hii)
con_hand_3<-cor.test(dataset_hiii$ConTemp,dataset_hiii$hIII,method = "k")
n[4]<-nrow(dataset_hiii)
testlist<-list(con_search_1,con_search_2,con_hand_2,con_hand_3)
output_temp_con<-matrix(nrow=length(testlist),ncol=4)
colnames(output_temp_con)<-c("z","tau","p-value","n")
rownames(output_temp_con)<-c("Search rate type I","Search rate type II", "Handling time type II", "Handling time type III")
for(i in 1:length(testlist)){
output_temp_con[i,1]<-testlist[[i]]$statistic
output_temp_con[i,2]<-testlist[[i]]$estimate
output_temp_con[i,3]<-testlist[[i]]$p.value
output_temp_con[i,4]<-n[i]
}
#this one a bit different because samplee size
output_temp_con_table<-xtable(output_temp_con,label='Paramtemp',caption = 'Table of results for Kendall rank order correlation tests for consumer temperature and parameter values.')
print(output_temp_con_table,floating=FALSE,tabular.environment = 'longtable',file ="../Results/Tables/output_temp_con_latex.txt",caption.placement ="top")
##section 2 of results- numbers
write(format(round(sum(data$BestAIC=="HollingII_AIC")/length(data$BestAIC), 2), nsmall = 2),"../Results/Tables/holIIbest")
write(format(round(sum(data$BestAIC_sec=="Poly3_AIC")/length(data$BestAIC_sec), 2), nsmall = 2),"../Results/Tables/poly32best")
sum(data$BestAIC_sec=="Poly2_AIC")/length(data$BestAIC_sec)
write(format(round(sum(data$best.model.type=="Mechanistic")/length(data$best.model.type), 2), nsmall = 2),"../Results/Tables/mechbest")
##section3
write(sum(data$BestAICHol=="HollingIII_AIC")-sum(data$BestAICHolRECAL=="HollingIII_AIC"),"../Results/Tables/recaldiff")
#senction 1 of results
sum(data$FailHolI>0,na.rm=T)
write(sum(data$FailHolII>0,na.rm = T),"../Results/Tables/failII")
write(sum(data$FailHolIII>0,na.rm = T),"../Results/Tables/failIII")
sum(data$FailPol2>0,na.rm = T)
sum(data$FailPol3>0,na.rm = T)
sum(data$hIIIp<0.05,na.rm=T)
#save output
write.csv(data,"../Results/dataanalysiscrat.csv")
source('~/Documents/CMEECourseWork/Miniproject/Code/plotting.R', echo=TRUE)
source('~/Documents/CMEECourseWork/Miniproject/Code/analysistidied.R', echo=TRUE)
