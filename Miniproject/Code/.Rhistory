Best<-matrix(ncol=3,nrow=length(listID))
Best[,1]<-modelqual[,1]
View(data)
View(data)
for (l in length(listID)){
Best[l,2]<-which(modelqual[l,]==min(modelqual[l,],na.rm=TRUE,arr.ind=TRUE))
}
View(Best)
View(Best)
l=1
which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
l=2
which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
l=3
which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
View(Best)
View(Best)
View(Best)
View(Best)
for (l inlength(listID)){
print(l)
#Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
}
for (l in length(listID)){
print(l)
#Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
}
for (l in listID){
print(l)
#Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
}
for (l in listID){
#print(l)
Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
}
for (l in listID){
#print(l)
Best[l,2]<- which(modelqual[l,]==min(modelqual[l,],na.rm=TRUE,arr.ind=TRUE))
}
modelqual[l,2:4]
l=1
modelqual[l,2:4]
min(modelqual[l,2:4])
Best[l,3<-min(modelqual[l,2:4])
}
#minAIC<-which(mat[,4] == min(mat[,4],na.rm=TRUE,arr.ind=TRUE))
}
for (l in listID){
#print(l)
#    Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
Best[l,3<-min(modelqual[l,2:4])
}
#minAIC<-which(mat[,4] == min(mat[,4],na.rm=TRUE,arr.ind=TRUE))
}
for (l in listID){
#print(l)
#    Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
Best[l,3]<-min(modelqual[l,2:4])
}
for (l in listID){
#print(l)
#    Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
Best[l,3]<-min(modelqual[l,2:4])
}
#print(l)
#    Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
j<-which(modelqual[,1]==l)
for (l in listID){
#print(l)
#    Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
j<-which(modelqual[,1]==l)
#Best[l,3]<-min(modelqual[l,2:4])
}
for (l in listID){
#print(l)
#    Best[l,2]<- which(modelqual[l,2:4]==min(modelqual[l,2:4],na.rm=TRUE,arr.ind=TRUE))
j<-which(modelqual[,1]==l)
Best[j,3]<-min(modelqual[j,2:4])
}
View(Best)
View(Best)
)
Best[j,2]<- which(modelqual[j,2:4]==min(modelqual[j,2:4],na.rm=TRUE,arr.ind=TRUE)
Best[j,3]<-min(modelqual[j,2:4])
}
#minAIC<-which(mat[,4] == min(mat[,4],na.rm=TRUE,arr.ind=TRUE))
}
for (l in listID){
#print(l)
#
j<-which(modelqual[,1]==l)
Best[j,2]<- which(modelqual[j,2:4]==min(modelqual[j,2:4],na.rm=TRUE,arr.ind=TRUE))
Best[j,3]<-min(modelqual[j,2:4]
}
#minAIC<-which(mat[,4] == min(mat[,4],na.rm=TRUE,arr.ind=TRUE))
}
for (l in listID){
I
min(modelqual[l,2:4])
}
for (l in listID) {
#print(l)
#
j<-which(modelqual[,1]==l)
Best[j,2]<- which(modelqual[j,2:4]==min(modelqual[j,2:4],na.rm=TRUE,arr.ind=TRUE))
Best[j,3]<-min(modelqual[j,2:4])
}
which(modelqual[j,2:4]==min(modelqual[j,2:4]
}
for (l in listID) {
#print(l)
#
j<-which(modelqual[,1]==l)
Best[j,2]<- which(modelqual[j,2:4]==min(modelqual[j,2:4]),na.rm=TRUE,arr.ind=TRUE)
Best[j,3]<-min(modelqual[j,2:4])
}
Best[j,2]<- which(modelqual[j,2:4]==min(modelqual[j,2:4]),na.rm=TRUE,arr.ind=TRUE)
for (l in listID) {
#print(l)
#
j<-which(modelqual[,1]==l)
Best[j,2]<- which(modelqual[j,2:4]==min(modelqual[j,2:4],na.rm=TRUE,arr.ind=TRUE))
Best[j,3]<-min(modelqual[j,2:4])
}
%paste
which(modelqual[j,2:4]==min(modelqual[j,2:4],na.rm=TRUE,arr.ind=TRUE))
which(modelqual[j,2:4]==min(modelqual[j,2:4])
}
which(modelqual[j,2:4]==min(modelqual[j,2:4]))
Best[j,2]<- which(modelqual[j,2:4]==min(modelqual[j,2:4]),na.rm=TRUE,arr.ind=TRUE)
Best[j,2]<- which((modelqual[j,2:4]==min(modelqual[j,2:4]),na.rm=TRUE,arr.ind=TRUE))
Best[j,2]<- which(modelqual[j,2:4]==min(modelqual[j,2:4],na.rm=TRUE, arr.ind=TRUE))
for (l in listID) {
#print(l)
#
j<-which(modelqual[,1]==l)
Best[j,2]<- which(modelqual[j,2:4]==min(modelqual[j,2:4],na.rm=TRUE, arr.ind=TRUE))
Best[j,3]<-min(modelqual[j,2:4])
}
View(Best)
View(Best)
View(modelqual)
View(modelqual)
which(modelqual[j,2:4]==min(modelqual[j,2:4]))
help("which")
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
View(modelqual)
View(modelqual)
View(Best)
View(Best)
View(Best)
View(Best)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqual)
View(modelqual)
View(modelqual)
View(data)
View(data)
View(Best)
View(Best)
View(Best)
View(Best)
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
help(plot)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
l=2
View(Best)
View(Best)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqual)
View(modelqual)
View(modelqual)
View(modelqual)
View(Best)
View(Best)
View(data)
View(data)
View(modelqual)
View(modelqual)
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqual)
View(modelqual)
listID<-39910
#listID<-as.numeric(unique(data$ID))
#listID<-c(39841,39839,39842)
issuesH<-vector()
issuesG<-vector()
issuesPC<-vector()
issuesP<-vector()
modelqual<-matrix(nrow=length(listID),ncol=5)
j=0
Best<-matrix(ncol=3,nrow=length(listID))
for (i in listID){
j=j+1
modelqual[j,1]<-i
subsetT<-subset(data, ID==i)
colnames(modelqual)<-c("ID","Holling","Holling_General","Pol_Quadratic","Pol_Cubic")
#starting values
out<-Start(subsetT)
#model fitting
HolFit<-try(nlsLM(N_TraitValue ~ Holling(ResDensity,a,h), data=subsetT, start=list(a=out[1],h=out[2])),silent=TRUE)
HolFitGEN<-try(nlsLM(N_TraitValue ~ HollingGEN(ResDensity,a,h,q), data=subsetT, start=list(a=out[1],h=out[2],q=out[3])),silent=TRUE)
pol<-try(lm(N_TraitValue ~ poly(ResDensity, degree=2), data=subsetT), silent=TRUE)
polc<-try(lm(N_TraitValue ~ poly(ResDensity, degree=3), data=subsetT),silent=TRUE)
Lengths<- seq(min(subsetT$ResDensity), max(subsetT$ResDensity),len=200)
pdf(paste0("../Results/Holgraphs/",i,".pdf") )
plot(subsetT$ResDensity,subsetT$N_TraitValue)
if("try-error" %in% class(polc)){
issuesPC<-append(issuesPC,i)
modelqual[j,5]<-"NA"
}else{
Predic2Plotpolc<- predict.lm(pol, data.frame(ResDensity=Lengths) )
lines(Lengths,Predic2Plotpolc,col="#FF6600",lwd=2.5)
modelqual[j,5]<-AIC(polc)
}
if("try-error" %in% class(pol)){
issuesP<-append(issuesP,i)
modelqual[j,4]<-"NA"
}else{
Predic2Plotpol<- predict.lm(pol, data.frame(ResDensity=Lengths) )
lines(Lengths,Predic2Plotpol,col="red",lwd=2.5)
modelqual[j,4]<-AIC(pol)
}
if("try-error" %in% class(HolFit)){
issuesH<-append(issuesH,i)
modelqual[j,2]<-"NA"
} else {
#   #first need to generate x so can calc predicted ys
Predic2PlotHol<- Holling(Lengths, coef(HolFit)["a"], coef(HolFit)["h"])
# pdf(paste0("../Results/Holgraphs/",i,".pdf") )
#plot(subsetT$ResDensity,subsetT$N_TraitValue)
lines(Lengths,Predic2PlotHol,col="blue",lwd=2.5)
modelqual[j,2]<-AIC(HolFit)
#lines(Lengths,Predic2Plotpol,col="red",lwd=2.5)
}
if("try-error" %in% class(HolFitGEN)){
issuesG<-append(issuesG,i)
#pdf(paste0("../Results/Holgraphs/",i,".pdf") )
#plot(subsetT$ResDensity,subsetT$N_TraitValue)
#lines(Lengths,Predic2Plotpol,col="red",lwd=2.5)
modelqual[j,3]<-"NA"
} else {
#   #first need to generate x so can calc predicted ys
Predic2PlotHolGEN<- HollingGEN(Lengths, coef(HolFitGEN)["a"], coef(HolFitGEN)["h"] , coef(HolFitGEN)["q"])
# pdf(paste0("../Results/Holgraphs/",i,".pdf") )
#plot(subsetT$ResDensity,subsetT$N_TraitValue)
#lines(Lengths,Predic2Plotpol,col="red",lwd=2.5)
modelqual[j,3]<-AIC(HolFitGEN)
lines(Lengths,Predic2PlotHolGEN,col="green",lwd=2.5)
}
graphics.off()
##try to move into above loop?
#s=0
#for (l in listID) {
#s=s+1
########## Best[j,1]<-i
#t<-which(modelqual[,1]==l)
#print(t)
# Best[s,2]<-
########## Best[j,2]<- which(modelqual[j,2:5]==min(modelqual[j,2:5],na.rm=TRUE, arr.ind=TRUE))
########## Best[j,3]<-min(modelqual[j,2:5])
#this isnt working bc l isn't an index
#  }
}
View(Best)
View(Best)
View(modelqual)
##try to move into above loop?
#s=0
#for (l in listID) {
#s=s+1
Best[j,1]<-i
#t<-which(modelqual[,1]==l)
#print(t)
# Best[s,2]<-
Best[j,2]<- which(modelqual[j,2:5]==min(modelqual[j,2:5],na.rm=TRUE, arr.ind=TRUE))
Best[j,3]<-min(modelqual[j,2:5])
#t<-which(modelqual[,1]==l)
#print(t)
# Best[s,2]<-
Best[j,2]<- which(modelqual[j,2:5]==min(modelqual[j,2:5],na.rm=TRUE, arr.ind=FALSE))
which(modelqual[j,2:5]==min(modelqual[j,2:5],na.rm=TRUE, arr.ind=TRUE))
min(modelqual[j,2:5]
}
min(modelqual[j,2:5])
a<-min(modelqual[j,2:5])
Best[j,2]<- which(modelqual[j,2:5]==a],na.rm=TRUE, arr.ind=TRUE))
Best[j,2]<- which(modelqual[j,2:5]==a,na.rm=TRUE, arr.ind=TRUE))
Best[j,2]<- which(modelqual[j,2:5]==a),na.rm=TRUE, arr.ind=TRUE))
Best[j,2]<- which(modelqual[j,2:5]==a), na.rm=TRUE, arr.ind=TRUE))
Best[j,2]<- which(modelqual[j,2:5]==a), na.rm=TRUE, arr.ind=FALSE))
which(modelqual[j,2:5]==min(modelqual[j,2:5],na.rm=TRUE, arr.ind=TRUE))
which(modelqual[j,2:5]==min(modelqual[j,2:5]
)
}
which(modelqual[j,2:5]==min(modelqual[j,2:5]))
#t<-which(modelqual[,1]==l)
#print(t)
# Best[s,2]<-
Best[j,2]<- which(modelqual[j,2:5]==min(modelqual[j,2:5])),na.rm=TRUE, arr.ind=TRUE)
#t<-which(modelqual[,1]==l)
#print(t)
# Best[s,2]<-
Best[j,2]<- which(modelqual[j,2:5]==min(modelqual[j,2:5])) na.rm=TRUE, arr.ind=TRUE)
#t<-which(modelqual[,1]==l)
#print(t)
# Best[s,2]<-
Best[j,2]<- which(modelqual[j,2:5]==min(modelqual[j,2:5]))
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
View(Best)
View(Best)
#t<-which(modelqual[,1]==l)
#print(t)
# Best[s,2]<-
Best[j,2]<- which(modelqual[j,2:5]==min(modelqual[j,2:5]))
View(Best)
View(Best)
View(modelqual)
View(Best)
View(Best)
##try to move into above loop?
#s=0
#for (l in listID) {
#s=s+1
Best[j,1]<-i
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
Predic2PlotHolGEN
HolFitGEN
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(HolFit)
View(pol)
View(pol)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqualb)
View(modelqualb)
View(modelqualb)
View(modelqualb)
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqualb)
View(modelqualb)
View(Best)
View(Best)
View(modelqual)
View(modelqual)
c(-5,-10,5)
min(C)
min(c)
min(c)
#t<-which(modelqual[,1]==l)
#print(t)
# Best[s,2]<-
###not callign correct valye
t<-which(modelqual==i)
Best[j,2]<- which(modelqual[t,2:5]==min(modelqual[t,2:5]))
#t<-which(modelqual[,1]==l)
#print(t)
# Best[s,2]<-
###not callign correct valye
t<-which(modelqual[,1]==i)
u<-which(modelqualb[,1]==i)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
help("which")
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
modelqual[t,2:5]
min(modelqual[t,2:5])
max(modelqual[t,2:5])
class(modelqual[t,2:5])
class(modelqual)
as.numeric(modelqual[t,2:5])
min(as.numeric(modelqual[t,2:5]))
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
View(Best)
help(min)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(modelqual)
View(modelqual)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
View(Best)
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
if(!("try-error" %in% class(polc))& AIC(polc)!="-Inf"){
Predic2Plotpolc<- predict.lm(polc, data.frame(ResDensity=Lengths) )
lines(Lengths,Predic2Plotpolc,col="#FF6600",lwd=2.5)
modelqual[j,5]<-AIC(polc)
modelqualb[j,5]<-BIC(polc)
}else{
issuesPC<-append(issuesPC,i)
modelqual[j,5]<-"NA"
modelqualb[j,5]<-"NA"
}
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/datamodellingQfourmod.R')
View(Best)
View(Best)
View(data)
View(Best)
View(Best)
which(Best[,2]!=Best[,4])
polc
summary(polc)
polc$rank
polc$terms
polc$ca;;
polc$call
polc$model
polc$R
polc$Multiple
summary(polc)$
}
summary(polc)
summary(polc)$adj.r.squared
