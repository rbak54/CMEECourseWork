theme_tufte()
q
require(ggplot2)
MyDF<- read.csv("../Data/EcolArchives-E089-51-D1.csv")
library(ggthemes)
q<- ggplot(MyDF, aes(x= log(Predator.mass), y=log(Prey.mass),
colour=Type.of.feeding.interaction)) + geom_point(size=I(2), shape=I(10))+
theme_bw()
q<- q+ geom_rangeframe()+
theme_tufte()
q
source('~/Documents/CMEECourseWork/Week3/Code/REMOVEMAYBEqplot.R')
source('~/Documents/CMEECourseWork/Week3/Code/REMOVEMAYBEqplot.R')
source('~/Documents/CMEECourseWork/Week3/Code/REMOVEMAYBEqplot.R')
q
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
setwd("~/Documents/CMEECourseWork/Week3/Code")
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(MyDF)
H<-H+labs(fill=element_text(face = "bold"))
H
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(MyDF)
View(MyDF)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(MyDF)
View(MyDF)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
warnings()
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(MyDF)
warwnings()
warnings()
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/DataWrang.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
warnings()
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
warnings()
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
for (n in MyDF) {
print(n)}
for (n in 1:length(MyDF$Prey.mass)) {
print(n)}
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(MyDFA)
View(MyDFA)
lim_mod <- summary(lm(Predator.mass ~ Prey.mass, data=MyDFa))
lim_mod <- summary(lm(Predator.mass ~ Prey.mass, data=MyDFA))
lin_mod
lim_mod
lim_mod$adj.r.squared
lim_mod$coefficients
lim_mod$coefficients[1]
str(lim_mod)
###didnt workH<-H+labs(fill=element_text(face = "bold"))
#loop that subsets by feeding and ..., (temp subsets), then lin regression
#e=c("")
#d=
#for ( in c){}
#T<-subset(MyDFA, Predator.lifestage==c)
#lim_mod <- summary(lm(Predator.mass ~ Prey.mass, data=MyDFA))
class(MyDFA$Type.of.feeding.interaction)
###didnt workH<-H+labs(fill=element_text(face = "bold"))
#loop that subsets by feeding and ..., (temp subsets), then lin regression
#e=c("")
#d=
#for ( in c){}
#T<-subset(MyDFA, Predator.lifestage==c)
#lim_mod <- summary(lm(Predator.mass ~ Prey.mass, data=MyDFA))
levels(MyDFA$Type.of.feeding.interaction)
###didnt workH<-H+labs(fill=element_text(face = "bold"))
#loop that subsets by feeding and ..., (temp subsets), then lin regression
e=c(levels(MyDFA$Type.of.feeding.interaction)))
###didnt workH<-H+labs(fill=element_text(face = "bold"))
#loop that subsets by feeding and ..., (temp subsets), then lin regression
e=c(levels(MyDFA$Type.of.feeding.interaction))
e#d=
d=c(levels(MyDFA$Predator.lifestage))
d#for ( in c){}
for (n in c){
print(n)
}
for (n in c) {
print(n)
}
for (n in e) {
print(n)
}
for (n in e) {
for (o in d){
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
}
}
View(TempData)
View(`T`)
e=c(levels(MyDFA$Type.of.feeding.interaction))
d=c(levels(MyDFA$Predator.lifestage))
for (n in e) {
for (o in d){
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
}
}
View(lim_mod)
levels(MyDFA$Predator.lifestage)
levels(MyDFA$Type.of.feeding.interaction)
data<-matrix(NA,nrow=1,ncol=5)
View(data)
#Author: Ruth Keane (ruth.keane19@imperial.ac.uk)
#Script: Mapping.R
#Desc: Make a world map and plot species data on it
#Arguments: none
#Input: none
#Output: none
#Date: Oct 2019
require(dplyr)
load("../Data/GPDDFiltered.RData")
require("maps")
map(database="world")
lat<-gpdd$lat
long<-gpdd$long
points(long,lat,col="blue",cex=0.5)
?colnames
colnames(x)<-c("Predator lifestage", "Type of feeding interaction", "Slope of regression", "Intercept of regression", "R-squared", "F-statistic", "p-value")
colnames(data)<-c("Predator lifestage", "Type of feeding interaction", "Slope of regression", "Intercept of regression", "R-squared", "F-statistic", "p-value")
data<-matrix(NA,nrow=30,ncol=7)
colnames(data)<-c("Predator lifestage", "Type of feeding interaction", "Slope of regression", "Intercept of regression", "R-squared", "F-statistic", "p-value")
View(gpdd)
View(data)
data<-matrix(NA,nrow=30,ncol=7)
colnames(data)<-c("Predator lifestage", "Type of feeding interaction", "Slope of regression", "Intercept of regression", "R-squared", "F-statistic", "p-value")
data()
data
Matrix<-matrix(NA,nrow=30,ncol=7)
Matrix
lim_mod
debugSource('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
lim_mod
lim_mod$aliased
lim_mod$adj.r.squared
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=MyDFA))
lim_mod$adj.r.squared
lim_mod$aliased
View(MyDFA)
View(MyDFA)
lim_mod
lim_mod$coefficients
lim_mod$coefficients[1,1]
lim_mod$coefficients[1,2]
lim_mod$coefficients[2,1]
for (n in e) {
for (o in d){
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
Matrix[o,3]<-lim_mod[2,1]         ]
}
}
colnames(data)<-c("Predator_lifestage", "Type_of_feeding_interaction", "Slope_of_regression", "Intercept_of_regression", "R-squared", "F-statistic", "p-value")
e=c(levels(MyDFA$Type.of.feeding.interaction))
d=c(levels(MyDFA$Predator.lifestage))
Matrix<-matrix(NA,nrow=30,ncol=7)
colnames(data)<-c("Predator_lifestage", "Type_of_feeding_interaction", "Slope_of_regression", "Intercept_of_regression", "R-squared", "F-statistic", "p-value")
for (n in e) {
for (o in d){
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
Matrix[o,"Slope_of_regression"]<-lim_mod[2,1]         ]
}
}
e=c(levels(MyDFA$Type.of.feeding.interaction))
d=c(levels(MyDFA$Predator.lifestage))
Matrix<-matrix(NA,nrow=30,ncol=7)
colnames(data)<-c("Predator_lifestage", "Type_of_feeding_interaction", "Slope_of_regression", "Intercept_of_regression", "R-squared", "F-statistic", "p-value")
for (n in e) {
for (o in d){
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
Matrix[o,"Slope_of_regression"]<-lim_mod[2,1]
}
}
View(Matrix)
?colnames
colnames(Matrix)<-c("Predator_lifestage", "Type_of_feeding_interaction", "Slope_of_regression", "Intercept_of_regression", "R-squared", "F-statistic", "p-value")
e=c(levels(MyDFA$Type.of.feeding.interaction))
d=c(levels(MyDFA$Predator.lifestage))
Matrix<-matrix(NA,nrow=30,ncol=7)
colnames(Matrix)<-c("Predator_lifestage", "Type_of_feeding_interaction", "Slope_of_regression", "Intercept_of_regression", "R-squared", "F-statistic", "p-value")
for (n in e) {
for (o in d){
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
Matrix[o,"Slope_of_regression"]<-lim_mod[2,1]
}
}
View(Matrix)
View(Matrix)
e=c(levels(MyDFA$Type.of.feeding.interaction))
d=c(levels(MyDFA$Predator.lifestage))
Matrix<-matrix(NA,nrow=30,ncol=7)
colnames(Matrix)<-c("Predator_lifestage", "Type_of_feeding_interaction", "Slope_of_regression", "Intercept_of_regression", "R-squared", "F-statistic", "p-value")
for (n in e) {
for (o in d){
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
Matrix[o,"Slope_of_regression"]<-lim_mod$coefficients[2,1]
}
}
for (n in e) {
for (o in d){
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
Matrix[1,"Slope_of_regression"]<-lim_mod$coefficients[2,1]
}
}
View(Matrix)
View(Matrix)
e=c(levels(MyDFA$Type.of.feeding.interaction))
d=c(levels(MyDFA$Predator.lifestage))
Matrix<-matrix(NA,nrow=30,ncol=7)
colnames(Matrix)<-c("Predator_lifestage", "Type_of_feeding_interaction", "Slope_of_regression", "Intercept_of_regression", "R-squared", "F-statistic", "p-value")
S=0
for (n in e) {
for (o in d){
S=S+1
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
Matrix[S,"Slope_of_regression"]<-lim_mod$coefficients[2,1]
}
}
View(Matrix)
View(Matrix)
e=c(levels(MyDFA$Type.of.feeding.interaction))
d=c(levels(MyDFA$Predator.lifestage))
Matrix<-matrix(NA,nrow=30,ncol=7)
colnames(Matrix)<-c("Predator_lifestage", "Type_of_feeding_interaction", "Slope_of_regression", "Intercept_of_regression", "R-squared", "F-statistic", "p-value")
S=0
for (n in e) {
for (o in d){
S=S+1
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
Matrix[S,3]<-lim_mod$coefficients[2,1]
}
}
lim_mod <- summary(lm(logPre
View(Matrix)
View(Matrix)
e=c(levels(MyDFA$Type.of.feeding.interaction))
d=c(levels(MyDFA$Predator.lifestage))
Matrix<-matrix(NA,nrow=30,ncol=7)
colnames(Matrix)<-c("Predator_lifestage", "Type_of_feeding_interaction", "Slope_of_regression", "Intercept_of_regression", "R-squared", "F-statistic", "p-value")
S=0
for (n in e) {
for (o in d){
S=S+1
T<-subset(MyDFA, MyDFA$Predator.lifestage==o)
T<-subset(MyDFA, MyDFA$Type.of.feeding.interaction==n)
lim_mod <- summary(lm(logPredator.mass ~ logPrey.mass, data=T))
Matrix[S,3]<-lim_mod$coefficients[2,1]
}
}
View(Matrix)
View(Matrix)
e=c(levels(MyDFA$Type.of.feeding.interaction))
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
lim_mod$coefficients
lim_mod$coefficients[1,2]
lim_mod$coefficients[2,1]
View(lim_mod)
lim_mod$r.squared
lim_mod$coefficients[4,2]
lim_mod$coefficients[2,4]
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
lim_mod$fstatistic
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
?ifelse
?else
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(lim_mod)
View(Matrix)
View(Matrix)
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
R<-subset(MyDFA, MyDFA$Predator.lifestage=="postlarva/juvenile")
R<-subset(R, R$Type.of.feeding.interaction=="piscivorous")
R
View(R)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(Matrix)
View(Matrix)
na.omit(Matrix)
M<-na.omit(Matrix)
View(M)
View(M)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(MyDF)
View(MyDF)
View(M)
View(M)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
View(M)
View(M)
View(M)
View(lim_mod)
View(lim_mod)
lim_mod$coefficients
lim_mod$fstatistic
source("PP_Regress.R")
source("autocorrelation.Rnw")
source('~/Documents/CMEECourseWork/Week3/Code/TAutoCorr.R')
source("try.R")
?commandArgs
x<-c(1,2,3,4,8)
y<-c(4,3,5,7,9)
model1<-(lm(y~x))
model1
summary(model1)
amova(model1)
anova(model1)
resid(model1)
resid(model1)
cov(x,y)
var(x)
plot(y~x)
source('~/Documents/CMEECourseWork/Week3/Code/get_TreeHeight.R')
model1
source('~/Documents/CMEECourseWork/Week3/Code/get_TreeHeight.R')
#Output: none
#Date: Oct 2019
##Write another R script called get_TreeHeight.R that takes a csv file name from
##the command line (e.g., get_TreeHeight.R Trees.csv) and outputs the result to a
#file just like TreeHeight.Rabove, but this time includes the input file name in
##output file name as InputFileName_treeheights.csv. Note that you will have to s
#trip the .csvor whatever the extension is from the filename, and also ../etc.,
#if you are using relative paths. (Hint: Command-line parameters are accessible
#within the R running environment via commandArgs() — so help(commandArgs) might
#be your starting point.)
arg<-commandArgs() #can go to command line arguemtn#
source('~/Documents/CMEECourseWork/Week3/Code/TreeHeight.R')
?commandArgs
source('~/Documents/CMEECourseWork/Week3/Code/TreeHeight.R')
setwd("~/Documents/CMEECourseWork/Week3/Code")
source('~/Documents/CMEECourseWork/Week3/Code/TreeHeight.R')
source('~/Documents/CMEECourseWork/Week3/Code/get_TreeHeight.R')
debugSource('~/Documents/CMEECourseWork/Week3/Code/get_TreeHeight.R')
file<-arg[5]
source('~/Documents/CMEECourseWork/Week3/Code/get_TreeHeight.R')
source('~/Documents/CMEECourseWork/Week3/Code/get_TreeHeight.R')
sedwd("~Documents/CMEECourseWork/Week4/Code"")
w
sedwd("~Documents/CMEECourseWork/Week4/Code")
setwd("~/Documents/CMEECourseWork/Week4/Code")
sedwd("~/Documents/CMEECourseWork/Week4/Code")
rm(list=ls())
sewd("~/Documents/CMEECourseWork/Week4/Code")
setwd("~/Documents/CMEECourseWork/Week4/Code")
plot(d$Mass~d$Tarsus, ylab="Mass (g)",pch=19, cex=0.4)
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)",pch=19, cex=0.4)
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)",pch=19, cex=0.4)
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4)
d<-read.table("../Data/SparrowSize.txt", header=TRUE)
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4)
x<-c(1:100)
b<-0.5
y<-m*x+b
x<-c(1:100)
b<-0.5
m<-1.5
y<-m*x+b
plot(x,y, xlim=c(0,100),ylim=c(0,100),pch=19)
d$Mass[1]
length(d$Mass)
d$Mass[1770]
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4)
ylim=c(‐5,38),  xlim=c(0)
ylim=c(‐5,38),  xlim=c(0,22)
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4),ylim=c(‐5,38),  xlim=c(0,22)
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4),ylim=c(‐5,38),  xlim=c(0,22))
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4,ylim=c(‐5,38),  xlim=c(0,22))
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4,ylim=c(‐5,38),  xlim=c(0,22))
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4,ylim=c(‐5,38),  xlim=c(0,22))
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4)
lot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4,ylim=c(‐5,38),  xlim=c(0,22))
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4)
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4,ylim=c(‐5,38),  xlim=c(0,22))
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4, ylim=c(‐5,38), xlim=c(0,22))
plot(d$Mass~d$Tarsus, ylab="Mass (g)",xlab="Tarsus (mm)", pch=19, cex=0.4, ylim=c(-5,38), xlim=c(0,22))
setwd("~/Documents/CMEECourseWork/Week3/Code")
source('~/Documents/CMEECourseWork/Week3/Code/get_TreeHeight.R')
#utput file name as InputFileName_treeheights.csv.
#want equiv of basenae for r acting on file then
#export data
TreeFile<-str()
arg<-commandArgs() #can go to command line arguemtn#
?Str
?str
source('~/Documents/CMEECourseWork/Week3/Code/PP_Lattice2.R')
View(meanmatrix)
View(meanmatrix)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Lattice.R')
View(meanmatrix)
View(meanmatrix)
View(M)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Lattice.R')
View(M)
View(M)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Lattice2.R')
R<-c("logPrey.mass","logPredator.mass","logRatio")
R
class(R)
R<-as.vector("logPrey.mass","logPredator.mass","logRatio")
R<-c("logPrey.mass","logPredator.mass","logRatio")
R<-as.vector(R)
R
class(R)
R<-as.data.frame(R)
class(R)
R
source('~/Documents/CMEECourseWork/Week3/Code/PP_Lattice2.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Lattice2.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Lattice2.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Lattice2.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Lattice2.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
class(e)
?aggregate
View(MyDFA)
View(DFwR)
View(DFwR)
source('~/Documents/CMEECourseWork/Week3/Code/PP_Regress.R')
source('~/Documents/CMEECourseWork/Week3/Code/PP_Lattice2.R)
}
)
}
))
