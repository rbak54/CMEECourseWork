p
##plotting
#plot eigenvalues
dev.off()
p<-ggplot(eigDF, aes(x=Real, y=Imaginary))
p<-p+geom_point(shape=I(3))+theme(legend.position="none")
#vertical and horizontal lines
p<- p+geom_hline(aes(yintercept=0))
p<-p+geom_vline(aes(xintercept=0))
p
#add ellipse
p<-p+geom_polygon(data=ellDF, aes(x= Real, y= Imaginary, alpha=1/20, fill= "red"))
p
##build function
dev.off()
require(ggplot2)
##build function
dev.off()
source("Girko.R")
source("Girko.R")
##build function
#dev.off()
#returns eclipse
build_ellipse<- function(hradius, vradius){
npoints=250
a<-seq(0, 2* pi, length=npoints+1)
x<-hradius*cos(a)
y<-vradius*sin(a)
return(data.frame(x=x, y=y))
}
source("Girko.R")
source("Girko.R")
p
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
#vertical and horizontal lines
p<- p+geom_hline(aes(yintercept=0))
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
p<-p+geom_vline(aes(xintercept=0))
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
p
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
###anotating plots
a<- read.table("../Data/Results.txt", header=TRUE)
head(a)
###anotating plots
a<- read.table("../Data/Results.txt", header=TRUE)
###anotating plots
a<- read.table("../Data/Results.txt", header=TRUE)
head(a)
?rep
?dim
p<-ggplot(a)
a<- read.table("../Data/Results.txt", header=TRUE)
head(a)
a$ymin<- rep(0,dim(a)[1]) #repeat, dimensions, append column of 0s
p<-ggplot(a)
#first linerange
p<-p+geom_linerange(data=a, aes(x= x,
ymin = ymin,
ymax= y1,
size=(0.5)
),
colour="#E69F00")
alpha=1/2, show.legend=FALSE)
#second linerange
p<- p + geom_linerange(data= a, aes(
x= x,
ymin= ymin,
ymax=y2
size=(0.5)
),
colour="#56B4E9",
alpha=1/2, show.legend=FALSE)
source('~/Documents/CMEECourseWork/Week3/Code/MyBars.R')
source('~/Documents/CMEECourseWork/Week3/Code/MyBars.R')
source('~/Documents/CMEECourseWork/Week3/Code/MyBars.R')
source('~/Documents/CMEECourseWork/Week3/Code/MyBars.R')
p
p<-ggplot(a)
#first linerange
p<-p+geom_linerange(data=a, aes(x= x,
ymin = ymin,
ymax= y1,
size=(0.5)
),
colour="#E69F00",
alpha=1/2, show.legend=FALSE)
dev.off()
p<-ggplot(a)
#first linerange
p<-p+geom_linerange(data=a, aes(x= x,
ymin = ymin,
ymax= y1,
size=(0.5)
),
colour="#E69F00",
alpha=1/2, show.legend=FALSE)
p
source('~/Documents/CMEECourseWork/Week3/Code/MyBars.R')
p
source('~/Documents/CMEECourseWork/Week3/Code/MyBars.R')
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
source('~/Documents/CMEECourseWork/Week3/Code/MyBars.R')
source('~/Documents/CMEECourseWork/Week3/Code/MyBars.R')
#Author: Ruth Keane (ruth.keane19@imperial.ac.uk)
#Script: MyBars.R
#Desc: Make a bar chart from Results.txt
#Arguments: none
#Input: none
#Output: none
#Date: Oct 2019
graphics.off()
source('~/Documents/CMEECourseWork/Week3/Code/MyBars.R')
?scale_x_continuous
?abline
my_lm$coefficients
#Author: Ruth Keane (ruth.keane19@imperial.ac.uk)
#Script: plotLin.R
#Desc:
#Arguments: none
#Input: none
#Output: none
#Date: Oct 2019
11.7, 8.3
require(ggplot2)
pdf("../Results/MyLinReg.pdf")
#creating some regressino stuff
x<- seq(0,100, by=0.1)
y<- -4 + 0.25* x + rnorm(length(x), mean=0., sd=2.5)
#add to dataframe
my_data<-data.frame(x=x, y=y)
#linear regression
my_lm<-summary(lm(y~x, data=my_data))
my_lm$coefficients
?geom_text
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
print(p)
graphics.off()
require(ggplot2)
pdf("../Results/MyLinReg.pdf", 11.7, 8.3)
#creating some regressino stuff
x<- seq(0,100, by=0.1)
y<- -4 + 0.25* x + rnorm(length(x), mean=0., sd=2.5)
#add to dataframe
my_data<-data.frame(x=x, y=y)
#linear regression
my_lm<-summary(lm(y~x, data=my_data))
# plot data
p<- ggplot(my_data, aes(x=x, y=y,
colour=abs(my_lm$residual))
)+
geom_point()+
scale_colour_gradient(low="black", high="red") +
theme(legend.position = "none")+
scale_x_continuous(
expression(alpha^2 * pi/beta * sqrt(Theta)))
#add regression line
p<- p+ geom_abline(
intercept=my_lm$coefficients[1][1],
slope=my_lm$coefficients[2][1],
colour="red")
#math
p<- p+geom_text(aes(x=60, y=0,
label="sqrt(alpha) *2 * pi"),
parse=TRUE, size=6,
colour="blue")
p
p
#Author: Ruth Keane (ruth.keane19@imperial.ac.uk)
#Script: MyBars.R
#Desc: Make a bar chart from Results.txt
#Arguments: none
#Input: none
#Output: none
#Date: Oct 2019
graphics.off()
#Author: Ruth Keane (ruth.keane19@imperial.ac.uk)
#Script: MyBars.R
#Desc: Make a bar chart from Results.txt
#Arguments: none
#Input: none
#Output: none
#Date: Oct 2019
graphics.off()
require(ggplot2)
a<- read.table("../Data/Results.txt", header=TRUE)
head(a)
a$ymin<- rep(0,dim(a)[1]) #repeat, dimensions, append column of 0s
#make pdf
pdf("../Results/Results.pdf", 11.7, 8.3)
##make graph
p<-ggplot(a)
#first linerange
p<-p+geom_linerange(data=a, aes(x= x,
ymin = ymin,
ymax= y1,
size=(0.5)
),
colour="#E69F00",
alpha=1/2, show.legend=FALSE)
#second linerange
p<- p + geom_linerange(data= a, aes(
x= x,
ymin= ymin,
ymax=y2,
size=(0.5)
),
colour="#56B4E9",
alpha=1/2, show.legend=FALSE)
p<- p + geom_linerange(data= a, aes(
x= x,
ymin= ymin,
ymax=y3,
size=(0.5)
),
colour="#D55E00",
alpha=1/2, show.legend=FALSE)
p<- p +scale_x_continuous("My x axis",
breaks=seq(3,5, by = 0.05))
p<- p +scale_y_continuous("My y axis")
p<-p+theme_bw() + theme(legend.position = "none")
p
View(Melt)
rm(list=ls())
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/Girko.R')
source('~/Documents/CMEECourseWork/Week3/Code/MyBars.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
rm(list=ls())
pdf("../Results/MyLinReg.pdf", 11.7,8.3)
pdf("../Results/MyLinReg.pdf", 11.7,8.3)
# a dataframe
# a dataframe
debugSource('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
my_lm<-summary(lm(y~x, data=my_data))
p
graphics.off()
require(ggplot2)
x <- seq(0, 100, by = 0.1)
y <- -4. + 0.25 * x +
rnorm(length(x), mean = 0., sd = 2.5)
graphics.off()
require(ggplot2)
x <- seq(0, 100, by = 0.1)
y <- -4. + 0.25 * x +
rnorm(length(x), mean = 0., sd = 2.5)
# a dataframe
my_data <- data.frame(x = x, y = y)
#linear regression
my_lm<-summary(lm(y~x, data=my_data))
p<- ggplot(my_data, aes(x=x, y=y,
colour=abs(my_lm$residual))
)+
geom_point()+
scale_colour_gradient(low="black", high="red") +
theme(legend.position = "none")+
scale_x_continuous(
expression(alpha^2 * pi/beta * sqrt(Theta)))
p
p<- p + geom_abline(
intercept=my_lm$coefficients[1][1],
slope=my_lm$coefficients[2][1],
colour="red")
p
p<- p+ geom_text(aes(x=60, y=0,
label="sqrt(alpha) *2 * pi"),
parse=TRUE, size=6,
colour="blue")
p
pdf("../Results/MyLinReg.pdf", 11.7,8.3)
print(p)
debugSource('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
p
p<- p+ geom_text(aes(x=60, y=0,
label="sqrt(alpha) *2 * pi"),
parse=TRUE, size=6,
colour="blue")
p
# plot data
p<- ggplot(my_data, aes(x=x, y=y,
colour=abs(my_lm$residual))
)+
geom_point()+
scale_colour_gradient(low="black", high="red") +
theme(legend.position = "none")+
scale_x_continuous(
expression(alpha^2 * pi/beta * sqrt(Theta)))
#add regression line
p<- p + geom_abline(
intercept=my_lm$coefficients[1][1],
slope=my_lm$coefficients[2][1],
colour="red")
#math
p<- p+ geom_text(aes(x=60, y=0,
label="sqrt(alpha) *2 * pi"),
parse=TRUE, size=6,
colour="blue")
p
p
pdf("../Results/MyLinReg.pdf", 11.7,8.3)
print(p)
p<- ggplot(my_data, aes(x=x, y=y,
colour=abs(my_lm$residual))
)+
geom_point()+
scale_colour_gradient(low="black", high="red") +
theme(legend.position = "none")+
scale_x_continuous(
expression(alpha^2 * pi/beta * sqrt(Theta)))
p<- ggplot(my_data, aes(x=x, y=y,
colour=abs(my_lm$residual))
)+
geom_point()+
scale_colour_gradient(low="black", high="red") +
theme(legend.position = "none")+
scale_x_continuous(
expression(alpha^2 * pi/beta * sqrt(Theta)))
p
#Author: Ruth Keane (ruth.keane19@imperial.ac.uk)
#Script: plotLin.R
#Desc:
#Arguments: none
#Input: none
#Output: none
#Date: Oct 2019
graphics.off()
require(ggplot2)
x <- seq(0, 100, by = 0.1)
y <- -4. + 0.25 * x +
rnorm(length(x), mean = 0., sd = 2.5)
# a dataframe
my_data <- data.frame(x = x, y = y)
#linear regression
my_lm<-summary(lm(y~x, data=my_data))
# plot data
p<- ggplot(my_data, aes(x=x, y=y,
colour=abs(my_lm$residual))
)+
geom_point()+
scale_colour_gradient(low="black", high="red") +
theme(legend.position = "none")+
scale_x_continuous(
expression(alpha^2 * pi/beta * sqrt(Theta)))
p
#add regression line
p<- p + geom_abline(
intercept=my_lm$coefficients[1][1],
slope=my_lm$coefficients[2][1],
colour="red")
#math
p<- p+ geom_text(aes(x=60, y=0,
label="sqrt(alpha) *2 * pi"),
parse=TRUE, size=6,
colour="blue")
p
pdf("../Results/MyLinReg.pdf", 11.7,8.3)
print(p)
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
#Author: Ruth Keane (ruth.keane19@imperial.ac.uk)
#Script: plotLin.R
#Desc:
#Arguments: none
#Input: none
#Output: none
#Date: Oct 2019
graphics.off()
require(ggplot2)
x <- seq(0, 100, by = 0.1)
y <- -4. + 0.25 * x +
rnorm(length(x), mean = 0., sd = 2.5)
# a dataframe
my_data <- data.frame(x = x, y = y)
#linear regression
my_lm<-summary(lm(y~x, data=my_data))
# plot data
p<- ggplot(my_data, aes(x=x, y=y,
colour=abs(my_lm$residual))
)+
geom_point()+
scale_colour_gradient(low="black", high="red") +
theme(legend.position = "none")+
scale_x_continuous(
expression(alpha^2 * pi/beta * sqrt(Theta)))
#add regression line
p<- p + geom_abline(
intercept=my_lm$coefficients[1][1],
slope=my_lm$coefficients[2][1],
colour="red")
#math
p<- p+ geom_text(aes(x=60, y=0,
label="sqrt(alpha) *2 * pi"),
parse=TRUE, size=6,
colour="blue")
p
pdf("../Results/MyLinReg.pdf", # Open blank pdf page using a relative path
11.7, 8.3)
rm(list=ls())
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
p
p<- ggplot(my_data, aes(x=x, y=y,
colour=abs(my_lm$residual))
)+
geom_point()+
scale_colour_gradient(low="black", high="red") +
theme(legend.position = "none")+
scale_x_continuous(
expression(alpha^2 * pi/beta * sqrt(Theta)))
#add regression line
p<- p + geom_abline(
intercept=my_lm$coefficients[1][1],
slope=my_lm$coefficients[2][1],
colour="red")
#math
p<- p+ geom_text(aes(x=60, y=0,
label="sqrt(alpha) *2 * pi"),
parse=TRUE, size=6,
colour="blue")
p
p
pdf("../Results/MyLinReg.pdf", # Open blank pdf page using a relative path
11.7, 8.3)
print(p)
p
p<- ggplot(my_data, aes(x=x, y=y,
colour=abs(my_lm$residual))
)+
geom_point()+
scale_colour_gradient(low="black", high="red") +
theme(legend.position = "none")+
scale_x_continuous(
expression(alpha^2 * pi/beta * sqrt(Theta)))
#add regression line
p<- p + geom_abline(
intercept=my_lm$coefficients[1][1],
slope=my_lm$coefficients[2][1],
colour="red")
#math
p<- p+ geom_text(aes(x=60, y=0,
label="sqrt(alpha) *2 * pi"),
parse=TRUE, size=6,
colour="blue")
p
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
p
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
install.packages(("ggthemes"))
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
require(ggplot2)
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
source('~/Documents/CMEECourseWork/Week3/Code/plotLin.R')
MyDF<- read.csv("../Data/EcolArchives-E089-51-D1.csv")
###ggthemes
library(ggthemes)
p<- ggplot(MyDF, aes(x= log(Predator.mass), y=log(Prey.mass),
colour=Type.of.feeding.interaction)) + geom_point(size=I(2), shape=I(10))+theme_bw()
p + geom_rangeframe()+
theme_tufte()
p
p
library(ggthemes)
q<- ggplot(MyDF, aes(x= log(Predator.mass), y=log(Prey.mass),
colour=Type.of.feeding.interaction)) + geom_point(size=I(2), shape=I(10))+theme_bw()
q + geom_rangeframe()+
theme_tufte()
q
library(ggthemes)
q<- ggplot(MyDF, aes(x= log(Predator.mass), y=log(Prey.mass),
colour=Type.of.feeding.interaction))
+ geom_point(size=I(2), shape=I(10))+theme_bw()
+ geom_rangeframe()
+ theme_tufte()
q<- ggplot(MyDF, aes(x= log(Predator.mass), y=log(Prey.mass),
colour=Type.of.feeding.interaction))+ geom_point(size=I(2), shape=I(10))+
theme_bw()
q<-q+geom_rangeframe()+
theme_tufte()
q
###ggthemes
library(ggthemes)
q<- ggplot(MyDF, aes(x= log(Predator.mass), y=log(Prey.mass),
colour=Type.of.feeding.interaction))+ geom_point(size=I(2), shape=I(10))+
theme_bw()
q<-q+geom_rangeframe()+
theme_tufte()
q
q<- ggplot(MyDF, aes(x= log(Predator.mass), y=log(Prey.mass),
colour=Type.of.feeding.interaction)) + geom_point(size=I(2), shape=I(10))+
theme_bw()
q<- q+ geom_rangeframe()+
theme_tufte()
q
