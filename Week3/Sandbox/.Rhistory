S
S<-S+geom_vline(xintercept=corR,colour="blue",label="Weather Correlation")
S<-S+geom_vline(xintercept=corR,colour="blue",show;show.legend = "Weather Autocorrelation")
S<-S+ geom_vline(xintercept=corR,colour="blue",show;show.legend = "Weather Autocorrelation")
S<-S+ geom_vline(xintercept=corR,colour="blue",show; show.legend = "Weather Autocorrelation")
?show_legend
?vline
?geom_vline
S<-S+ geom_vline(xintercept=corR,colour="blue",show; show.legend = TRUE)
S<-S+ geom_vline(xintercept=corR,colour="blue",show; show.legend = TRUE)
S<-S+ geom_vline(xintercept=corR,colour="blue", show.legend = TRUE)
S
?geom_vline
?geom_text#
?geom_text
S<-S+geom_text(x=0.2,y=3, label="Weather Autocorrelation")
S
S<-S+geom_text(x=0.2,y=3, label="Weather Autocorrelation", color="blue")
S
corR
S<-S+geom_text(x=0.2,y=3, label="Weather Autocorrelation = 0.326", color="blue")
S
S<-S+geom_text(x=0,y=3, label="Weather Autocorrelation = 0.326", color="blue")
S
S
S
graphics.off()
S
graphics.off()
S<-ggplot(A,aes(V))+geom_density()+xlab("Correlation Coefficient")+ylab("Density")
S<-S+ geom_vline(xintercept=corR,colour="blue", show.legend = TRUE)
S<-S+geom_text(x=0,y=3, label="Weather Autocorrelation = 0.326", color="blue")
S
S<-S+geom_text(x=0.1,y=3, label="Weather Autocorrelation = 0.326", color="blue")
S
graphics.off()
S
graphics.off()
Q<-ggplot(ats,aes(year,time))+geom_line()
H<-c(ats1,ats2)
R<-ggplot(H,aes(ats1,ats2))
H
H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))
R
utils::View(H)
utils::View(ats1)
utils::View(ats2)
utils::View(ats1)
H<-c(ats1,ats2)
#(please include the the document's source code as well).
load("/home/ruth/Documents/CMEECourseWork/Week3/Data/KeyWestAnnualMeanTemperature.RData")
#utils::View(ats)
ats2<-dplyr::lag(ats$Temp,n=1)
ats1<-ats[,2]
ats1<-ats1[2:100]
ats2<-ats2[2:100]
H<-c(ats1,ats2)
H<-as.data.frame(H)
Utils::View(H)
Util::View(H)
util::View(H)
head(H)
ats1<-as.vector(ats1)
H<-c(ats1,ats2)
head(H)
Q<-ggplot(ats,aes(year,time))+geom_line()
Q
#(please include the the document's source code as well).
load("/home/ruth/Documents/CMEECourseWork/Week3/Data/KeyWestAnnualMeanTemperature.RData")
head(ats)
Q<-ggplot(ats,aes(Year,Time))+geom_line()
Q
Q<-ggplot(ats,aes(Year,Temp))+geom_line()
Q
Q<-ggplot(ats,aes(Year,Temp))+geom_line()+ylab("Temperature")
Q
ats2<-as.vector(ats1)
H<-c(ats1,ats2)
H
head(H)
H<-c(ats1,ats2)
head(H)
str(H)
utils::View(H)
#(please include the the document's source code as well).
load("/home/ruth/Documents/CMEECourseWork/Week3/Data/KeyWestAnnualMeanTemperature.RData")
#utils::View(ats)
ats2<-dplyr::lag(ats$Temp,n=1)
ats1<-ats[,2]
ats1<-ats1[2:100]
ats2<-ats2[2:100]
ats1<-as.character(ats1)
ats2<-as.character(ats1)
H<-c(ats1,ats2)
utils::View(H)
#(please include the the document's source code as well).
load("/home/ruth/Documents/CMEECourseWork/Week3/Data/KeyWestAnnualMeanTemperature.RData")
#utils::View(ats)
ats2<-dplyr::lag(ats$Temp,n=1)
ats1<-ats[,2]
ats1<-ats1[2:100]
ats2<-ats2[2:100]
ats1<-as.character(ats1)
ats2<-as.character(ats2)
H<-c(ats1,ats2)
utils::View(H)
utils::View(H)
99+99
H<-data.frame(ats1,ats2)
#Author: Ruth Keane (ruth.keane19@imperial.ac.uk)
#Script: TAutoCorr.R
#Desc:
#Arguments:
#Input:
#Output:
#Date: Oct 2019
#Your goal is to write an R script that will help answer the question:
# Are temperatures of one year significantly correlated with the next year (successive years),
#across years in a given location? For this, you need to calculate the correlation between nâˆ’1 pairs of years,
#where n#is the total number of years. However, you can't use the standard p-value calculated for a correlation coefficient, because measurements of climatic variables in successive time-points in a time series (successive seconds, minutes, hours, months, years, etc.) are not independent. The general guidelines are:
#   Make a new script named TAutoCorr.R, and save in codedirectory
#  At the start of the script, load and examine and plot KeyWestAnnualMeanTemperature.Rdata, using load().
#This is the temperature in Key West, Florida for the 20th century.
# Now extend the script to:
#    Compute the appropriate correlation coefficient between successive years and store it
#(look at the help file for cor()
#   Repeat this calculation 10000 times by -- randomly permuting the time series, and then recalculating the
#correlation coefficient for each randomly permuted year sequence and storing it. Hint: you can use the sample function
#that we learned about). Read the help file for this function and experiment with it.
#    #  Then calculate what fraction of the correlation coefficients from the previous step were greater t
#han that from step 1 (this is your approximate p-value).
# How do you interpret these results? Why? Present your results and their interpretation in a pdf document
#written in LATEX
#(please include the the document's source code as well).
load("/home/ruth/Documents/CMEECourseWork/Week3/Data/KeyWestAnnualMeanTemperature.RData")
#utils::View(ats)
ats2<-dplyr::lag(ats$Temp,n=1)
ats1<-ats[,2]
ats1<-ats1[2:100]
ats2<-ats2[2:100]
ats1<-as.character(ats1)
ats2<-as.character(ats2)
H<-data.frame(ats1,ats2)
corR<-cor(ats1,ats2)
print(corR)
V<-rep(NA,10000)
for (i in 1:10000){
ats2<-sample(ats2)
cor<-cor(ats1,ats2)
V[i]=cor
}
Bee=0
for (v in V) {
if (v > corR){
Bee=Bee+1}
}
#proportion greater
p<-(Bee/length(V))
print(p)
graphics.off()
A<-as.data.frame(V)
##ggplot with my value on # write some words in
#head(A)
require(ggplot2)
# How do you interpret these results? Why? Present your results and their interpretation in a pdf document
#written in LATEX
#(please include the the document's source code as well).
load("/home/ruth/Documents/CMEECourseWork/Week3/Data/KeyWestAnnualMeanTemperature.RData")
#utils::View(ats)
ats2<-dplyr::lag(ats$Temp,n=1)
ats1<-ats[,2]
ats1<-ats1[2:100]
ats2<-ats2[2:100]
#ats1<-as.character(ats1)
#ats2<-as.character(ats2)
H<-data.frame(ats1,ats2)
corR<-cor(ats1,ats2)
print(corR)
V<-rep(NA,10000)
for (i in 1:10000){
ats2<-sample(ats2)
cor<-cor(ats1,ats2)
V[i]=cor
}
Bee=0
for (v in V) {
if (v > corR){
Bee=Bee+1}
}
#proportion greater
p<-(Bee/length(V))
print(p)
graphics.off()
A<-as.data.frame(V)
##ggplot with my value on # write some words in
#head(A)
require(ggplot2)
Q<-ggplot(ats,aes(Year,Temp))+geom_line()+ylab("Temperature")
Q
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))
R
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))+geom_point()
R
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")
R
?geom_smooth
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")+xlab("Temperature in year n"+ylab("Temperature in year n+1")
R
R
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")+xlab("Temperature in year n"+ylab("Temperature in year n+1")
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")+xlab("Temperature in year n"+ylab("Temperature in year n+1")
#ats1<-as.character(ats1)
#ats2<-as.character(ats2)
H<-data.frame(ats1,ats2)
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")+xlab("Temperature in year n"+ylab("Temperature in year n+1")
R
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")+xlab("Temperature in year n")+ylab("Temperature in year n+1")
R
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")+xlab("Temperature in year n")+ylab("Temperature in year n+1")+title("Temperature change between years")
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")+xlab("Temperature in year n")+ylab("Temperature in year n+1")+ title("Temperature change between years")
#H<-as.data.frame(H)
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")+xlab("Temperature in year n")+ylab("Temperature in year n+1")+ ggtitle("Temperature change between years")
R
S<-ggplot(A,aes(V))+geom_density()+xlab("Correlation Coefficient")+ylab("Density")+
geom_vline(xintercept=corR,colour="blue", show.legend = TRUE)+
geom_text(x=0.1,y=3, label="Weather Autocorrelation = 0.326", color="blue")+
ggtitle("Correlation Coefficient density")
S
Q<-ggplot(ats,aes(Year,Temp))+geom_line()+ylab("Temperature")+ggtitle("Temperature changes from 1900 to 2000")
Q
source('~/Documents/CMEECourseWork/Week3/Code/argh.R')
source('~/Documents/CMEECourseWork/Week3/Code/argh.R')
Q
r
R
S
# Chunk 1
graphics.off()
load("/home/ruth/Documents/CMEECourseWork/Week3/Data/KeyWestAnnualMeanTemperature.RData")
#utils::View(ats)
ats2<-dplyr::lag(ats$Temp,n=1)
ats2<-ats2[which(is.na(ats$Temp)==F)]
ats1<-ats[,2]
ats1<-ats1[2:100]
ats2<-ats2[2:100]
#ats1<-as.character(ats1)
#ats2<-as.character(ats2)
H<-data.frame(ats1,ats2)
corR<-cor(ats1,ats2)
print(corR)
V<-rep(NA,10000)
for (i in 1:10000){
ats2<-sample(ats2)
cor<-cor(ats1,ats2)
V[i]=cor
}
Bee=0
for (v in V) {
if (v > corR){
Bee=Bee+1}
}
#proportion greater
p<-(Bee/length(V))
print(p)
A<-as.data.frame(V)
# Chunk 2
require(ggplot2)
Q<-ggplot(ats,aes(Year,Temp))+geom_line()+ylab("Temperature")+ggtitle("Temperature changes from 1900 to 2000")
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")+xlab("Temperature in year n")+ylab("Temperature in year n+1")+ ggtitle("Temperature change between years")
S<-ggplot(A,aes(V))+geom_density()+xlab("Correlation Coefficient")+ylab("Density")+
geom_vline(xintercept=corR,colour="blue", show.legend = TRUE)+
geom_text(x=0.1,y=3, label="Weather Autocorrelation = 0.326", color="blue")+
ggtitle("Correlation Coefficient density")
R<-ggplot(H,aes(ats1,ats2))+geom_point()+geom_smooth(method="lm")+xlab("Temperature in year n")+ylab("Temperature in year n+1")+ ggtitle("Temperature change between years")
source('~/Documents/CMEECourseWork/Week3/Code/argh.R')
(Q)
print(R)
print(S)
source('~/Documents/CMEECourseWork/Week3/Code/TAutoCorr.R')
View(S)
#  N<-matrix(NA,numyears,length(p0))
# N[1,]<-p0
populations<-rnorm(1000,0.5,1.5)
populations
pop<-rnorm(1000,0.5,1.5)
#loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr,pop] <- N[yr-1,pop] * exp(r * (1 - N[yr - 1,pop] / K) + rnorm(1,0,sigma))
return(N)
}
stochrickvect<-function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100){
N<-matrix(NA,numyears,length(p0))
#  N<-matrix(NA,numyears,length(p0))
# N[1,]<-p0
pop<-rnorm(1000,0.5,1.5)
N[,1]<-pop
#loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr,pop] <- N[yr-1,pop] * exp(r * (1 - N[yr - 1,pop] / K) + rnorm(1,0,sigma))
return(N)
}
stochrickvect<-function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100){
N<-matrix(NA,numyears,length(p0))
#  N<-matrix(NA,numyears,length(p0))
# N[1,]<-p0
pop<-rnorm(1000,0.5,1.5)
N[,1]<-pop
#loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr,pop] <- N[yr-1,pop] * exp(r * (1 - N[yr - 1,pop] / K) + rnorm(1,0,sigma))
return(N)
}
print(N)
}
S}
stochrickvect<-function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100){
N<-matrix(NA,numyears,length(p0))
#  N<-matrix(NA,numyears,length(p0))
# N[1,]<-p0
pop<-rnorm(1000,0.5,1.5)
N[,1]<-pop
#loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr,pop] <- N[yr-1,pop] * exp(r * (1 - N[yr - 1,pop] / K) + rnorm(1,0,sigma))
return(N)
}
print(N)
}
stochrickvect<-function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100){
N<-matrix(NA,numyears,length(p0))
#  N<-matrix(NA,numyears,length(p0))
# N[1,]<-p0
popu<-rnorm(1000,0.5,1.5)
N[,1]<-popu
#loop through the populations
for (yr in 2:numyears){ #for each pop, loop through the years
N[yr,pop] <- N[yr-1,pop] * exp(r * (1 - N[yr - 1,pop] / K) + rnorm(1,0,sigma))
return(N)
}
print(N)
}
source('~/Documents/CMEECourseWork/Week3/Code/Vectorize2.R')
source('~/Documents/CMEECourseWork/Week3/Code/Vectorize2.R')
source('~/Documents/CMEECourseWork/Week3/Code/Vectorize2.R')
source('~/Documents/CMEECourseWork/Week3/Code/Vectorize2.R')
source('~/Documents/CMEECourseWork/Week3/Code/Vectorize2.R')
source('~/Documents/CMEECourseWork/Week3/Code/Vectorize2.R')
source('~/Documents/CMEECourseWork/Week3/Code/Vectorize2.R')
head(N)
N<-matrix(NA,numyears,1000)
pop<-rnorm(1000,0.5,1.5)
N[1,]<-pop
head(N)
N<-matrix(NA,100,1000)
pop<-rnorm(1000,0.5,1.5)
N[1,]<-pop
head(N)
head(N)
N<-matrix(NA,100,1000)
pop<-rnorm(1000,0.5,1.5)
N[,1]<-pop
head(N)
N[1,]<-pop
pop<-rnorm(1000,0.5,1.5)
N[1,]<-pop
head(N)
source('~/Documents/CMEECourseWork/Week3/Code/Vectorize2.R')
source('~/Documents/CMEECourseWork/Week3/Code/Vectorize2.R')
View(res2)
print(system.time(res2<-stochrickvect())
)
View(res2)
##curent issue is above N object not found. need to think more carefully
stochrickvect<-function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100){
N<-matrix(NA,100,1000)
#  N<-matrix(NA,numyears,length(p0))
# N[1,]<-p0
pop<-rnorm(1000,0.5,1.5)
N[1,]<-pop
#loop through the populations
for (yr in 2:100){ #for each pop, loop through the years
N[yr,] <- N[yr-1,] * exp(r * (1 - N[yr - 1,] / K) + rnorm(1,0,sigma))
return(N)
}
print(N)
}
print("Vectorized Stochastic Ricker takes:")
print(system.time(res2<-stochrickvect()))
View(res2)
##curent issue is above N object not found. need to think more carefully
stochrickvect<-function(p0=runif(1000,.5,1.5),r=1.2,K=1,sigma=0.2,numyears=100){
N<-matrix(NA,100,1000)
#  N<-matrix(NA,numyears,length(p0))
# N[1,]<-p0
pop<-rnorm(1000,0.5,1.5)
N[1,]<-pop
#loop through the populations
for (yr in 2:100){ #for each pop, loop through the years
N[yr,] <- N[yr-1,] * exp(r * (1 - N[yr - 1,] / K) + rnorm(1,0,sigma))
}
return(N)
}
print(system.time(res2<-stochrickvect()))
View(res2)
source('~/Documents/CMEECourseWork/Week3/Code/Vectorize2.R')
View(res2)
View(res2)
load("../Data/GPDDFiltered.RData")
Utils::View(gppd)
require(plyr)
load("../Data/GPDDFiltered.RData")
Utils::View(gppd)
require(Utils)
require(dplyr)
Utils::View(gppd)
utils::View(gppd)
require(dplyr)
utils::View(gppd)
utils::View(gpdd)
install.packages(maps)
install.packages("maps")
require("maps")
?map
map(database="world")
?map
require(dplyr)
load("../Data/GPDDFiltered.RData")
utils::View(gpdd)
require("maps")
map(database="world")
for (n in gppd){
points(gppd$lat,gppd$long,col="blue")
}
require(dplyr)
load("../Data/GPDDFiltered.RData")
utils::View(gpdd)
require("maps")
M<-map(database="world")
for (n in gppd){
points(M,gppd$lat,gppd$long,col="blue")
}
M
require(dplyr)
load("../Data/GPDDFiltered.RData")
utils::View(gpdd)
require("maps")
map(database="world")
for (n in gppd){
points(M,gppd$lat,gppd$long,col="blue",cex=.6)
}
map(rworldmap)
gpdd$lat <- "lat"
gpdd$long <- "long"
dots<- rbind(lat,long)
# map the data
# map + data points
mapPointsDA <- ggmap(map) +
+   geom_point(aes(x = lat, y = long, data = dots, alpha = .5)
# adjust the legend
gpdd$lat <- "lat"
gpdd$long <- "long"
dots<- rbind(lat,long)
# map the data
# map + data points
mapPointsDA <- ggmap(map) +
+   geom_point(aes(x = lat, y = long, data = dots, alpha = .5))
# adjust the legend
install.packages(ggmP)
install.packages("ggmap")
require("ggmap")
# create the data set containing both departures and arrivals
gpdd$lat <- "lat"
install.packages("ggmap")
require("ggmap")
require(ggmap)
require(ggmap2)
?map
require(dplyr)
load("../Data/GPDDFiltered.RData")
utils::View(gpdd)
require("maps")
map(database="world")
for (n in gppd){
points(M,gppd$lat,gppd$long,col="blue",cex=.6)
}
require(dplyr)
load("../Data/GPDDFiltered.RData")
utils::View(gpdd)
require("maps")
map(database="world")
for (n in gppd){
points(M,gpdd$lat,gpdd$long,col="blue",cex=.6)
}
qmplot(long, lat, data = gpdd, colour = I('red'), size = I(3), darken = .3)
install.packages(qmplot)
install.packages("ggmap")
install.packages("ggmap")
install.packages("ggmap")
library(ggmap)
install.packages("ggmap")
library(ggmap)
